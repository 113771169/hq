<?xml version="1.0"?> 

<!--
  NOTE: This copyright does *not* cover user programs that use HQ
  program services by normal system calls through the application
  program interfaces provided as part of the Hyperic Plug-in Development
  Kit or the Hyperic Client Development Kit - this is merely considered
  normal use of the program, and does *not* fall under the heading of
  "derived work".
  
  Copyright (C) [2004, 2005, 2006], Hyperic, Inc.
  This file is part of HQ.
  
  HQ is free software; you can redistribute it and/or modify
  it under the terms version 2 of the GNU General Public License as
  published by the Free Software Foundation. This program is distributed
  in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
  even the implied warranty of MERCHANTABILITY or FITNESS FOR A
  PARTICULAR PURPOSE. See the GNU General Public License for more
  details.
  
  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
  USA.
 -->

<plugin name="servlet" class="ServletProductPlugin"> 

  <!-- template config is appended to all templates -->
  <property name="template-config"
            value="jmxUrl=%jmxUrl%,jmxUser=%jmxUser%,jmxPass=%jmxPass%"/>

      <!-- Generic metrics, common to all servlet engines. Followed by container-specific extensions  -->

  <metrics name="Servlet Engine">

    <metric name="JVM Active Thread Count"
            alias="ActiveThreadCount"
            template="hyperic-hq:type=RuntimeInfo:ActiveThreadCount"
            category="UTILIZATION"
            group="Resource Utilization"
            indicator="true"
            units="none"
            collectionType="dynamic"/>

    <metric name="JVM Active Thread Group Count"
            alias="ActiveThreadGroupCount"
            template="hyperic-hq:type=RuntimeInfo:ActiveThreadGroupCount"
            category="UTILIZATION"
            group="Resource Utilization"
            units="none"
            collectionType="dynamic"/>

    <metric name="JVM Free Memory"
            alias="FreeMemory"
            template="hyperic-hq:type=RuntimeInfo:FreeMemory"
            category="UTILIZATION"
            group="Resource Utilization"
            units="B"
            collectionType="dynamic"/>

    <metric name="JVM Total Memory"
            alias="TotalMemory"
            template="hyperic-hq:type=RuntimeInfo:TotalMemory"
            category="UTILIZATION"
            group="Resource Utilization"
            units="B"
            collectionType="dynamic"/>

    <metric name="Uptime"
            alias="Uptime"
            template="hyperic-hq:type=ServerMeasurement:Uptime"
            category="AVAILABILITY"
            group="Reliability"
            units="ms"
            collectionType="static"/>

    <metric name="Availability"
            alias="Availability"
            template="hyperic-hq:type=ServerMeasurement:Available"
            category="AVAILABILITY"
            group="Reliability"
            indicator="true"
            units="percentage"
            collectionType="dynamic"/>

    <!-- Don't generate rates for the CPU user and system time.  They
         depend on which thread collects the metric and can slightly
         trend down, causing negitive rates -->

    <metric name="Process CPU System Time"
            alias="TimeSys"
            template="hyperic-hq:type=ProcessInfo:TimeSys"
            rate="none"
            category="UTILIZATION"
            group="Resource Utilization"
            units="sec"
            collectionType="trendsup"/>

    <metric name="Process CPU User Time"
            alias="TimeUser"
            template="hyperic-hq:type=ProcessInfo:TimeUser"
            rate="none"
            category="UTILIZATION"
            group="Resource Utilization"
            units="sec"
            collectionType="trendsup"/>

    <metric name="Process Memory Size"
            alias="MemSize"
            template="hyperic-hq:type=ProcessInfo:MemSize"
            category="UTILIZATION"
            group="Resource Utilization"
            units="B"
            collectionType="dynamic"/>

    <metric name="Process Resident Memory Size"
            alias="MemResident"
            template="hyperic-hq:type=ProcessInfo:MemResident"
            category="UTILIZATION"
            group="Resource Utilization"
            units="B"
            collectionType="dynamic"/>

    <metric name="Process Shared Memory Size"
            alias="MemShare"
            template="hyperic-hq:type=ProcessInfo:MemShare"
            category="UTILIZATION"
            group="Resource Utilization"
            units="B"
            collectionType="dynamic"/>

    <metric name="Process Page Faults"
            alias="PageFaults"
            template="hyperic-hq:type=ProcessInfo:MemPageFaults"
            category="UTILIZATION"
            group="Resource Utilization"
            collectionType="trendsup"/>

    <metric name="Process Open File Descriptors"
            alias="OpenFd"
            template="hyperic-hq:type=ProcessInfo:OpenFd"
            category="UTILIZATION"
            group="Resource Utilization"
            units="none"
            collectionType="dynamic"/>

    <metric name="Number of Requests Served"
            alias="RequestCount"
            template="hyperic-hq:type=AllContextInfo:${alias}"
            category="THROUGHPUT"
            group=""
            indicator="true"
            units="none"
            collectionType="trendsup"/>

    <metric name="Total Processing Time"
            alias="TotalTime"
            template="hyperic-hq:type=AllContextInfo:${alias}"
            category="PERFORMANCE"
            group=""
            indicator="true"
            units="ms"
            collectionType="trendsup"/>
  </metrics>

  <metrics name="Web Application">
    <metric name="Number of Requests Served"
            alias="RequestCount"
            template="hyperic-hq:type=Context,name=%context%:RequestCount"
            category="THROUGHPUT"
            group=""
            indicator="true"
            units="none"
            collectionType="trendsup"/>

    <metric name="Number of errors"
            alias="ErrorCount"
            template="hyperic-hq:type=Context,name=%context%:ErrorCount"
            category="UTILIZATION"
            group=""
            units="none"
            collectionType="trendsup"/>

    <metric name="Sessions Created"
            alias="SessionsCreated"
            template="hyperic-hq:type=Context,name=%context%:SessionsCreated"
            category="UTILIZATION"
            group=""
            indicator="true"
            units="none"
            collectionType="trendsup"/>

    <metric name="Sessions Destroyed"
            alias="SessionsDestroyed"
            template="hyperic-hq:type=Context,name=%context%:SessionsDestroyed"
            category="UTILIZATION"
            group=""
            units="none"
            collectionType="trendsup"/>

    <metric name="Minimum Response Time of a servlet"
            alias="MinTime"
            template="hyperic-hq:type=Context,name=%context%:MinTime"
            category="PERFORMANCE"
            group=""
            units="ms"
            collectionType="dynamic"/>

    <metric name="Maximum Response Time of a servlet"
            alias="MaxTime"
            template="hyperic-hq:type=Context,name=%context%:MaxTime"
            category="PERFORMANCE"
            group=""
            units="ms"
            collectionType="dynamic"/>

    <metric name="Average Response Time"
            alias="AvgTime"
            template="hyperic-hq:type=Context,name=%context%:AvgTime"
            category="PERFORMANCE"
            group=""
            indicator="true"
            units="ms"
            collectionType="dynamic"/>

    <metric name="Total Processing Time for the webapp"
            alias="TotalTime"
            template="hyperic-hq:type=Context,name=%context%:TotalTime"
            category="PERFORMANCE"
            group=""
            indicator="true"
            units="ms"
            collectionType="trendsup"/>

    <metric name="Availability"
            alias="Availability"
            template="hyperic-hq:type=Context,name=%context%:Available"
            category="AVAILABILITY"
            group=""
            indicator="true"
            units="percentage"
            collectionType="dynamic"/>

  </metrics>

      <!-- ==================== JRun4 metrics ==================== -->
  <metrics name="JRun 4.x" include="Servlet Engine" />
  <metrics name="JRun 4.x Webapp" include="Web Application" />

      <!-- ==================== ServletExec metrics ==================== -->
  <metrics name="ServletExec 4.2" include="Servlet Engine" />
  <metrics name="ServletExec 4.2 Webapp" include="Web Application" />

  <metrics name="Resin 2.x" include="Servlet Engine" />
  <metrics name="Resin 2.x Webapp" include="Web Application" />

      <!-- ==================== Tomct40 metrics ==================== -->
  <metrics name="Tomcat 4.0" include="Servlet Engine" />
  <metrics name="Tomcat 4.0 Webapp" include="Web Application" />

      <!-- ==================== Tomcat41 metrics ==================== -->

  <metrics name="Tomcat 4.1" 
           include="Servlet Engine" >
  </metrics>

  <metrics name="Tomcat 4.1 Webapp" include="Web Application">
    <metric name="Expired Sessions"
            alias="ExpiredSessions"
            template="Catalina:type=Manager,path=%context%,host=%host%,service=%service%:expiredSessions"
            category="UTILIZATION"
            group="Session"
            units="none"
            collectionType="trendsup"/>

    <metric name="Rejected Sessions"
            alias="RejectedSessions"
            template="Catalina:type=Manager,path=%context%,host=%host%,service=%service%:rejectedSessions"
            category="UTILIZATION"
            group="Session"
            units="none"
            collectionType="trendsup"/>

    <metric name="Max Active Sessions"
            alias="MaxActive"
            template="Catalina:type=Manager,path=%context%,host=%host%,service=%service%:maxActive"
            category="UTILIZATION"
            group="Session"
            units="none"
            collectionType="dynamic"/>
  </metrics>

  <metrics name="Tomcat 4.1 Connector">

    <metric name="Availability"
            alias="Availability"
            template="Catalina:type=GlobalRequestProcessor,connector=%connector%,connectorPort=%connectorPort%:Available"
            category="AVAILABILITY"
            group=""
            indicator="true"
            units="percentage"
            collectionType="dynamic"/>

    <metric name="Bytes Received"
            alias="BytesReceived"
            template="Catalina:type=GlobalRequestProcessor,name=%connector%%connectorPort%:bytesReceived"
            category="THROUGHPUT"
            group=""
            indicator="true"
            units="B"
            collectionType="trendsup"/>

    <metric name="Bytes Sent"
            alias="BytesSent"
            template="Catalina:type=GlobalRequestProcessor,name=%connector%%connectorPort%:bytesSent"
            category="THROUGHPUT"
            group=""
            indicator="true"
            units="B"
            collectionType="trendsup"/>

    <metric name="Error Count"
            alias="ErrorCount"
            template="Catalina:type=GlobalRequestProcessor,name=%connector%%connectorPort%:errorCount"
            category="UTILIZATION"
            group=""
            units="none"
            collectionType="trendsup"/>

    <metric name="Request Count"
            alias="RequestCount"
            template="Catalina:type=GlobalRequestProcessor,name=%connector%%connectorPort%:requestCount"
            category="THROUGHPUT"
            group=""
            indicator="true"
            units="none"
            collectionType="trendsup"/>

    <metric name="Maximum Request Time"
            alias="MaxTime"
            template="Catalina:type=GlobalRequestProcessor,name=%connector%%connectorPort%:maxTime"
            category="PERFORMANCE"
            group=""
            units="ms"
            collectionType="dynamic"/>

    <metric name="Processing Request Time"
            alias="ProcessingTime"
            template="Catalina:type=GlobalRequestProcessor,name=%connector%%connectorPort%:processingTime"
            category="PERFORMANCE"
            group=""
            units="ms"
            collectionType="trendsup"/>

    <metric name="Threads Allocated"
            alias="CurrentThreadCount"
            template="Catalina:type=ThreadPool,name=%connector%%connectorPort%:currentThreadCount"
            category="UTILIZATION"
            group=""
            units="none"
            collectionType="dynamic"/>

    <metric name="Threads Active"
            alias="CurrentThreadsBusy"
            template="Catalina:type=ThreadPool,name=%connector%%connectorPort%:currentThreadsBusy"
            category="UTILIZATION"
            group=""
            units="none"
            collectionType="dynamic"/>

  </metrics>

  <!-- ==================== Tomcat 5.0 metrics ==================== -->
  <metrics name="Tomcat 5.0" 
           include="Tomcat 4.1"/>
  <metrics name="Tomcat 5.0 Webapp"
           include="Tomcat 4.1 Webapp"/>

  <metrics name="Tomcat 5.0 Connector">

    <metric name="Availability"
            alias="Availability"
            template="Catalina:type=GlobalRequestProcessor,connector=%connector%,connectorPort=%connectorPort%,connectorPath=%connectorPath%:Available"
            category="AVAILABILITY"
            group=""
            indicator="true"
            units="percentage"
            collectionType="dynamic"/>

    <metric name="Bytes Received"
            alias="BytesReceived"
            template="Catalina:type=GlobalRequestProcessor,name=%connectorName%:bytesReceived"
            category="THROUGHPUT"
            group=""
            indicator="true"
            units="B"
            collectionType="trendsup"/>

    <metric name="Bytes Sent"
            alias="BytesSent"
            template="Catalina:type=GlobalRequestProcessor,name=%connectorName%:bytesSent"
            category="THROUGHPUT"
            group=""
            indicator="true"
            units="B"
            collectionType="trendsup"/>

    <metric name="Error Count"
            alias="ErrorCount"
            template="Catalina:type=GlobalRequestProcessor,name=%connectorName%:errorCount"
            category="UTILIZATION"
            group=""
            units="none"
            collectionType="trendsup"/>

    <metric name="Request Count"
            alias="RequestCount"
            template="Catalina:type=GlobalRequestProcessor,name=%connectorName%:requestCount"
            category="THROUGHPUT"
            group=""
            indicator="true"
            units="none"
            collectionType="trendsup"/>

    <metric name="Maximum Request Time"
            alias="MaxTime"
            template="Catalina:type=GlobalRequestProcessor,name=%connectorName%:maxTime"
            category="PERFORMANCE"
            group=""
            units="ms"
            collectionType="dynamic"/>

    <metric name="Processing Request Time"
            alias="ProcessingTime"
            template="Catalina:type=GlobalRequestProcessor,name=%connectorName%:processingTime"
            category="PERFORMANCE"
            group=""
            units="ms"
            collectionType="trendsup"/>

    <metric name="Threads Allocated"
            alias="CurrentThreadCount"
            template="Catalina:type=ThreadPool,name=%connectorName%:currentThreadCount"
            category="UTILIZATION"
            group=""
            units="none"
            collectionType="dynamic"/>

    <metric name="Threads Active"
            alias="CurrentThreadsBusy"
            template="Catalina:type=ThreadPool,name=%connectorName%:currentThreadsBusy"
            category="UTILIZATION"
            group=""
            units="none"
            collectionType="dynamic"/>

  </metrics>

  <!-- ==================== Tomcat 5.5 metrics ==================== -->
  <metrics name="Tomcat 5.5" 
           include="Tomcat 4.1"/>
  <metrics name="Tomcat 5.5 Webapp"
           include="Tomcat 4.1 Webapp"/>
  <metrics name="Tomcat 5.5 Connector" 
           include="Tomcat 5.0 Connector"/>

  <!-- ==================== Plugin Help =========================== -->
  <help name="tc_log_track">
  <![CDATA[
  <p>
  <h3>Configure Tomcat ${product.version} for Log Tracking</h3>
  </p>

  <p>
  To enable Log Tracking in HQ, Tomcat must be configured with log4j.
  These steps are based on the standard
  <a href="http://tomcat.apache.org/tomcat-5.5-doc/logging.html">
  Tomcat documentation</a>.
  </p>

  <p>
  If the file
  ${installpath}${FILE.sep}common${FILE.sep}classes${FILE.sep}log4j.properties
  does not exist, create one with the following example contents:
  </p>

  <pre>
#These properties can be modified.  The only requirement is that the
#ConversionPattern includes the priority (%p)
log4j.rootLogger=INFO, R
log4j.appender.R.File=${catalina.home}/logs/tomcat.log
log4j.appender.R.MaxBackupIndex=1
log4j.appender.R.MaxFileSize=5000KB
log4j.appender.R.layout.ConversionPattern=%d %-5p [%c{1}] %m%n
log4j.appender.R.layout=org.apache.log4j.PatternLayout
log4j.appender.R=org.apache.log4j.RollingFileAppender
  </pre>

  <p>Next, copy the following jars unless they have already been installed:</p>

  <pre>
  ${CMD.cp} pdk${FILE.sep}lib${FILE.sep}log4j.jar ${installpath}${FILE.sep}common${FILE.sep}lib
  ${CMD.cp} pdk${FILE.sep}lib${FILE.sep}commons-logging.jar ${installpath}${FILE.sep}common${FILE.sep}lib
  </pre>

  <p>Restart Tomcat for the changes to take effect.</p>
  ]]>
  </help>

  <help name="footer">
  <![CDATA[
  <pre>
  &lt;filter&gt;
    &lt;filter-name&gt;JMXFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;org.hyperic.hq.product.servlet.filter.JMXFilter&lt;/filter-class&gt;
      
    &lt;!-- Uncomment the following line to enable response time logging. 
            The directory you specify as the param can include properties 
            referenced from the System.properties of the vm.

            The ResponseTime log file will by default store the last 1 hour's 
            worth of response time data. This file gets truncated as soon as 
            data is succesfully sent into the server. The file is named uniquely
            for each webapp in the form: yourContextName_HQResponseTime.log

            If this fragment is included in the global web.xml for the container,
            all webapps in it will generate response time data, and have logs 
            following the format described above. You can enable it individually 
            on each webapp as well if you dont want every webapp to generate 
            response time data

         --&gt;
    &lt;!--
    &lt;init-param&gt;
      &lt;param-name&gt;responseTimeLogDir&lt;/param-name&gt;
      &lt;param-value&gt;${logdir}&lt;/param-value&gt;
    &lt;/init-param&gt;
         --&gt;

    &lt;!-- these are optional parameters which you can override to optimize logging --&gt;
    &lt;!--
    &lt;init-param&gt;
      &lt;param-name&gt;bufferSize&lt;/param-name&gt;
      &lt;param-value&gt;8k&lt;/param-value&gt;
    &lt;/init-param&gt;

    &lt;init-param&gt;
      &lt;param-name&gt;bufferTime&lt;/param-name&gt;
      &lt;param-value&gt;1h&lt;/param-value&gt;
    &lt;/init-param&gt;
         --&gt;
  &lt;/filter&gt;

  &lt;filter-mapping&gt;
    &lt;filter-name&gt;JMXFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
  &lt;/filter-mapping&gt;

  &lt;listener&gt;
    &lt;listener-class&gt;org.hyperic.hq.product.servlet.filter.JMXSessionListener&lt;/listener-class&gt;
    &lt;/listener&gt;

  &lt;servlet&gt;
    &lt;servlet-name&gt;JMXWebappMetricServlet&lt;/servlet-name&gt;
    &lt;servlet-class&gt;org.hyperic.hq.product.servlet.filter.JMXFilterInitServlet&lt;/servlet-class&gt;
    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
  &lt;/servlet&gt;
  </pre>

  <p>
  This can be tested by verifying your webapps show up correctly in
  the <a href="${jmxUrl}/hyperic-hq/jmx-attributes?dmp=hyperic-hq:*">
  JMX Servlet</a>.  You may need to modify the hostname in the URL if
  your jmxUrl is configured relative to the agent host.
  </p>
  ]]>
  </help>

  <help name="tomcat">
  <![CDATA[
  <p>
  <h3>Configure Tomcat ${product.version} for Monitoring</h3>
  </p>

  <p>
  To enable monitoring of Tomcat servers and services the Tomcat server
  must be instrumented using a filter to collect metrics and a webapp
  to deliver the metric data into HQ.  The web application, filter and
  any additional jars are packaged in the HQ agent directory under
  product_connectors${FILE.sep}servlet.  All commands below should be 
  issued from this directory.
  </p>

  <p>
  If you are using Apache/JK to front your Tomcat installation you will
  need to setup a mount point.  This can be done by adding the following
  to your Apache configuration file.
  </p>

  <pre>
   JkMount /hyperic-hq/* ajp13
  </pre>

  <p>
  The first step to making Tomcat monitorable is to install the filter, JMX
  jars and webapp.  These are used to collect internal Tomcat metrics.</p>

  <pre>
   ${CMD.cp} libs${FILE.sep}hq-filter.jar ${installpath}${FILE.sep}common${FILE.sep}lib
   ${CMD.cp} libs${FILE.sep}mx4j-jmx.jar ${installpath}${FILE.sep}common${FILE.sep}lib
   ${CMD.cpr} hyperic-hq ${installpath}${FILE.sep}webapps${webapp.dir}
  </pre>
  ]]>
  </help>

  <help name="JBoss Tomcat">
  <![CDATA[
  <p>
  <h3>Configure Tomcat ${product.version} JBoss embedded for Monitoring</h3>
  </p>

  <p>
  <b>NOTE</b>:  If you are monitoring HQ's internal Tomcat, these steps are
  not necessary.
  </p>
  <p>
  To enable monitoring of Tomcat servers and services the Tomcat server
  must be instrumented using a filter to collect metrics and a webapp
  to deliver the metric data into HQ.  The web application, filter and
  any additional jars are packaged in the HQ agent directory under
  product_connectors${FILE.sep}servlet.  All commands below should be 
  issued from this directory.
  </p>

  <p>
  The first step to making Tomcat monitorable is to install the filter
  and webapp.  These are used to collect internal Tomcat metrics.</p>

  <pre>
   ${CMD.cp} libs${FILE.sep}hq-filter.jar ${installpath}
  </pre>

  <!-- Should make this automated -->
  <p>Next, deploy the hyperic-hq webapp in your JBoss server:</p>
  <pre>
   ${CMD.cpr} hyperic-hq ${installpath}${FILE.sep}..${FILE.sep}hyperic-hq.war
  </pre>
  ]]>
  </help>

  <help name="Tomcat 5.5" include="tomcat" append="footer,tc_log_track">
  <![CDATA[
  <p>
  Finally, the filter must be enabled.  The following must be added to 
  ${installpath}${FILE.sep}conf${FILE.sep}web.xml.  Keep in mind that each tag 
  type must be grouped together.
  </p>
  ]]>
  <!-- No additional help for Tomcat 5.5 -->
  </help>

  <help name="Tomcat 5.0" include="tomcat" append="footer,tc_log_track">
  <![CDATA[
  <p>
  Finally, the filter must be enabled.  The following must be added to 
  ${installpath}${FILE.sep}conf${FILE.sep}web.xml.  Keep in mind that each tag 
  type must be grouped together.
  </p>
  ]]>
  <!-- No additional help for Tomcat 5.0 -->
  </help>

  <help name="Tomcat 4.1" include="tomcat" append="footer,tc_log_track">
  <![CDATA[
  <p>
  Depending on which version of Tomcat 4.1 is being monitored, various files
  must be upgraded to enable metric collection.  For all versions the 
  ServerLifecycleListener must be modifed in server.xml to use jsr77Names.
  </p>
  <ul>
   <li>Edit ${installpath}${FILE.sep}conf${FILE.sep}server.xml.  In the &lt;Listener 
        classname="..SeverLifecycleListener"&gt; element, add
        jsr77Names="true"</li>
  </ul>

  <p>
  If you are using Tomcat 4.1.27 or earlier, the Tomcat connectors and Commons Modeler
  jar's must be updated.
  </p>

  <pre>
    ${CMD.cp} libs${FILE.sep}commons-modeler.jar ${installpath}${FILE.sep}server${FILE.sep}lib
    ${CMD.cp} libs${FILE.sep}tomcat*.jar ${installpath}${FILE.sep}server${FILE.sep}lib
  </pre>

  <p>
  If you are using Tomcat 4.1.18 or earlier, a new catalina
  jar must be installed to collect metrics.
  </p>

  <pre>
    ${CMD.cp} libs${FILE.sep}catalina.jar ${installpath}${FILE.sep}server${FILE.sep}lib
  </pre>

  <p>
  If you are running Tomcat 4.1.18 or earlier, or using Covalent
  ERS, you will likely need to remove tomcat-jni.jar.
  </p>

  <pre>
    ${CMD.rm} ${installpath}${FILE.sep}bin${FILE.sep}tomcat-jni.jar
  </pre>

  <p>
  Finally, the filter must be enabled.  The following must be added to 
  ${installpath}/conf/web.xml.  Keep in mind that each tag type must be
  grouped together.
  </p>
  ]]>
  </help>

  <help name="Tomcat 4.0" include="tomcat" append="footer,tc_log_track">
  <![CDATA[
  <p>
  Tomcat ${product.version} Webapp control requires the use of the 
  manager servlet.  The servlet is available by default in
  ${installpath}${FILE.sep}server${FILE.sep}lib${FILE.sep}servlets-manager.jar.
  </p>

  <ul>
    <li>Make sure servlets-manager.jar is installed</li>
    <li>Edit hyperic-hq${FILE.sep}WEB-INF${FILE.sep}web.xml.  Uncomment the 
        section between START_TOMCAT40 and END_TOMCAT40.</li>
    <li>In ${installpath}conf${FILE.sep}server.xml add &lt;Context
        path="/hyperic-hq" docBase="hyperic-hq" 
        privileged="true"/&gt;.  It must be in the &lt;Host&gt;
        section.</li>
  </ul>
  
  <p>
  Finally, the filter must be enabled.  The following must be added to 
  ${installpath}${FILE.sep}conf${FILE.sep}web.xml.  Keep in mind that each tag 
  type must be grouped together.</p>
  ]]>
  </help>

  <help name="JRun 4.x" append="footer">
  <!-- XXX: Remove duplication of this info by being able to substitute
       the product name -->
  <![CDATA[
  <p>
  <h3>Configure JRun ${product.version} for Monitoring</h3>
  </p>

  <p>
  To enable monitoring of JRun servers and services the JRun server
  must be instrumented using a filter to collect metrics and a webapp
  to deliver the metric data into HQ.  The web application, filter and
  any additional jars are packaged in the HQ agent directory under
  product_connectors${FILE.sep}servlet.  All commands below should be 
  issued from this directory.
  </p>

  <pre>
    ${CMD.cp} libs${FILE.sep}hq-filter.jar ${installpath}${FILE.sep}servers${FILE.sep}lib
    ${CMD.cpr} hyperic-hq ${installpath}${FILE.sep}servers${FILE.sep}${serverName}${webapp.dir}
  </pre>

  <p>
  Finally, the filter must be enabled.  The following must be added to 
  ${installpath}${FILE.sep}servers${FILE.sep}${serverName}${FILE.sep}SERVER_INF${FILE.sep}default-web.xml.
  Keep in mind that each tag type must be grouped together.
  </p>
  ]]>
  </help>

  <!-- Specific help for embedded Tomcat -->
  <help name="Tomcat 4.1 JBoss embedded" include="JBoss Tomcat" append="footer">
  <![CDATA[
  <p>
  Next, edit ${installpath}${FILE.sep}META-INF${FILE.sep}jboss-service.xml.
  In the &lt;Listener classname="..SeverLifecycleListener"&gt; element, add
  jsr77Names="true"
  </p>
  
  <p>If you are using Tomcat 4.1.27 or earlier, the Tomcat connectors must be updated.</p>

  <pre>
    ${CMD.cp} libs${FILE.sep}tomcat*.jar ${installpath}
  </pre>

  <p>
  Finally, the filter must be enabled.  The following must be added to 
  ${installpath}${FILE.sep}web.xml.  Keep in mind that each tag type 
  must be grouped together.
  </p>
  ]]>
  </help>

  <help name="Tomcat 5.0 JBoss embedded" include="JBoss Tomcat" append="footer">
  <![CDATA[
  <p>
  Finally, the filter must be enabled.  The following must be added to 
  ${installpath}${FILE.sep}web.xml.  Keep in mind that each tag type 
  must be grouped together.
  </p>
  ]]>
  </help>

  <help name="Tomcat 5.5 JBoss embedded" include="JBoss Tomcat" append="footer">
  <![CDATA[
  <p>
  Finally, the filter must be enabled.  The following must be added to 
  ${installpath}${FILE.sep}conf${FILE.sep}web.xml.
  Keep in mind that each tag type must be grouped together.
  </p>
  ]]>
  </help>

  <help name="Resin 2.x" append="footer">
  <![CDATA[
  <p>
  <h3>Configure Resin ${product.version} for Monitoring</h3>
  </p>

  <p>
  To enable monitoring of Resin servers and services the Resin server
  must be instrumented using a filter to collect metrics and a webapp
  to deliver the metric data into HQ.  The web application, filter and
  any additional jars are packaged in the HQ agent directory under
  product_connectors${FILE.sep}servlet.  All commands below should be 
  issued from this directory.
  </p>

  <pre>
    ${CMD.cp} libs${FILE.sep}hq-filter.jar ${installpath}${FILE.sep}lib
    ${CMD.cp} libs${FILE.sep}mx4j-jmx.jar ${installpath}${FILE.sep}lib
    ${CMD.cpr} hyperic-hq ${installpath}${FILE.sep}webapps${webapp.dir}
  </pre>
  
  <p>  
  The final step for monitoring requires a change to the environment
  to place mx4j-jmx.jar in the front of Resin's classpath.  Resin 2.x uses
  and older version of JMX that is incompatible with HQ.  To fix this 
  set the environment variable CLASSPATH to include the mx4j-jmx.jar
  </p>

  <pre>
     export CLASSPATH=${installpath}${FILE.sep}lib${FILE.sep}mx4j-jmx.jar
  </pre>

  <p>
  Then start the Resin server as normal.  This change can be made permanant
  by setting the CLASSPATH in the users login script or by directly modifying 
  Resin's startup script to set the classpath.</p>

  <p><b>NOTE: </b>If HQ is used to control the Resin server the modification to the
  CLASSPATH is not necessary.</p>

  <p>
  To enable the filter in a web application for monitoring, add the following
  filter definition to the application's web.xml.
  </p>
  ]]>
  </help>

</plugin>
