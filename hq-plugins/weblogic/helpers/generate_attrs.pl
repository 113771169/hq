#!/usr/bin/perl

#helpers/generate_attrs.pl > \
#src//product/weblogic/jmx/WeblogicAttributes.java

use strict;

my %beans;

#XXX currently used by control only, avail metric should use this too.
$beans{EJBComponentRuntime}->{Status} = 1;

my $metrics =
  shift || "$ENV{HOME}/spider/fast-build/docs/plugin-info/plugin-metrics.xml";

open FH, $metrics or die;

#seek
while (<FH>) {
    if (/<plugin name ="weblogic">/) {
        last;
    }
}

while (<FH>) {
    last if m:</plugin>:;
    next unless /template="(.*?)"/;
    my($plugin, $domain, $attrs, $attr, $rest) = split ':', $1;
    my(%attrs) = map { split '=' } split ',', $attrs;
    my $type = $attrs{Type};
    next unless $type;
    $beans{$type}->{$attr} = 1;
}

my $time = scalar localtime;

print <<EOF;
package org.hyperic.hq.product.weblogic.jmx;

import java.util.HashMap;

import javax.management.ObjectName;

//DO NOT MODIFY THIS CLASS - IT IS GENERATED by $0
//time generated: $time
//NOTE: EJB metrics are not include here, EJBRuntimeSummary
//uses MBeanServer.getAttributes with its own lists of attributes.

public final class WeblogicAttributes implements AttributeLister {

    private static final HashMap ATTR_NAMES;
    public static final WeblogicAttributes instance;

EOF

for my $type (sort keys %beans) {
    print "    private static final String[] $type = {\n";
    for my $attr (sort keys %{ $beans{ $type } }) {
        print qq(       "$attr",\n);
    }
    print "    };\n";
}

print <<EOF;
    static {
        HashMap attrs = new HashMap();
        instance = new WeblogicAttributes();
EOF

for my $type (sort keys %beans) {
    print qq(        attrs.put("$type", $type);\n);
}

print <<EOF;
        ATTR_NAMES = attrs;
    };

    public String[] getAttributeNames(ObjectName name) {
        return (String[])ATTR_NAMES.get(name.getKeyProperty("Type"));
    }
}
EOF
