/*
 * Generated by XDoclet - Do not edit!
 */
package org.hyperic.hq.ui.shared;

/**
 * Local interface for DashboardManager.
 */
public interface DashboardManagerLocal
   extends javax.ejb.EJBLocalObject
{

   public org.hyperic.hq.ui.server.session.UserDashboardConfig getUserDashboard( org.hyperic.hq.authz.server.session.AuthzSubject me,org.hyperic.hq.authz.server.session.AuthzSubject user ) throws org.hyperic.hq.authz.shared.PermissionException;

   public org.hyperic.hq.ui.server.session.RoleDashboardConfig getRoleDashboard( org.hyperic.hq.authz.server.session.AuthzSubject me,org.hyperic.hq.authz.server.session.Role r ) throws org.hyperic.hq.authz.shared.PermissionException;

   public org.hyperic.hq.ui.server.session.UserDashboardConfig createUserDashboard( org.hyperic.hq.authz.server.session.AuthzSubject me,org.hyperic.hq.authz.server.session.AuthzSubject user,java.lang.String name ) throws org.hyperic.hq.authz.shared.PermissionException;

   public org.hyperic.hq.ui.server.session.RoleDashboardConfig createRoleDashboard( org.hyperic.hq.authz.server.session.AuthzSubject me,org.hyperic.hq.authz.server.session.Role r,java.lang.String name ) throws org.hyperic.hq.authz.shared.PermissionException;

   /**
    * Reconfigure a user's dashboard
    */
   public void configureDashboard( org.hyperic.hq.authz.server.session.AuthzSubject me,org.hyperic.hq.ui.server.session.DashboardConfig cfg,org.hyperic.util.config.ConfigResponse newCfg ) throws org.hyperic.hq.authz.shared.PermissionException;

   public void renameDashboard( org.hyperic.hq.authz.server.session.AuthzSubject me,org.hyperic.hq.ui.server.session.DashboardConfig cfg,java.lang.String name ) throws org.hyperic.hq.authz.shared.PermissionException;

   /**
    * Determine if a dashboard is editable by the passed user
    */
   public boolean isEditable( org.hyperic.hq.authz.server.session.AuthzSubject me,org.hyperic.hq.ui.server.session.DashboardConfig dash ) ;

   public java.util.Collection getDashboards( org.hyperic.hq.authz.server.session.AuthzSubject me ) throws org.hyperic.hq.authz.shared.PermissionException;

   /**
    * Update dashboard and user configs to account for resource deletion
    * @param ids An array of ID's of removed resources
    */
   public void handleResourceDelete( org.hyperic.hq.appdef.shared.AppdefEntityID[] ids ) ;

   public org.hyperic.util.config.ConfigResponse getRssUserPreferences( java.lang.String user,java.lang.String token ) throws javax.security.auth.login.LoginException;

   public void startup(  ) ;

}
