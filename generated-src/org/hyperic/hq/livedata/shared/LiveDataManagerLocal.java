/*
 * Generated by XDoclet - Do not edit!
 */
package org.hyperic.hq.livedata.shared;

/**
 * Local interface for LiveDataManager.
 */
public interface LiveDataManagerLocal
   extends javax.ejb.EJBLocalObject
{
   /**
    * Run the given live data command.
    */
   public org.hyperic.hq.livedata.shared.LiveDataResult getData( org.hyperic.hq.authz.server.session.AuthzSubject subject,org.hyperic.hq.livedata.shared.LiveDataCommand cmd ) throws org.hyperic.hq.appdef.shared.AppdefEntityNotFoundException, org.hyperic.hq.authz.shared.PermissionException, org.hyperic.hq.appdef.shared.AgentNotFoundException, org.hyperic.hq.livedata.shared.LiveDataException;

   /**
    * Run the given live data command. If cached data is found that is not older than the cachedTimeout the cached data will be returned.
    * @param cacheTimeout
    */
   public org.hyperic.hq.livedata.shared.LiveDataResult getData( org.hyperic.hq.authz.server.session.AuthzSubject subject,org.hyperic.hq.livedata.shared.LiveDataCommand cmd,long cacheTimeout ) throws org.hyperic.hq.authz.shared.PermissionException, org.hyperic.hq.appdef.shared.AgentNotFoundException, org.hyperic.hq.appdef.shared.AppdefEntityNotFoundException, org.hyperic.hq.livedata.shared.LiveDataException;

   /**
    * Run a list of live data commands in batch.
    */
   public org.hyperic.hq.livedata.shared.LiveDataResult[] getData( org.hyperic.hq.authz.server.session.AuthzSubject subject,org.hyperic.hq.livedata.shared.LiveDataCommand[] commands ) throws org.hyperic.hq.appdef.shared.AppdefEntityNotFoundException, org.hyperic.hq.authz.shared.PermissionException, org.hyperic.hq.appdef.shared.AgentNotFoundException, org.hyperic.hq.livedata.shared.LiveDataException;

   /**
    * Run a list of live data commands in batch. If cached data is found that is not older than the cacheTimeout the cached data will be returned.
    * @param cacheTimeout The cache timeout given in milliseconds.
    */
   public org.hyperic.hq.livedata.shared.LiveDataResult[] getData( org.hyperic.hq.authz.server.session.AuthzSubject subject,org.hyperic.hq.livedata.shared.LiveDataCommand[] commands,long cacheTimeout ) throws org.hyperic.hq.authz.shared.PermissionException, org.hyperic.hq.appdef.shared.AppdefEntityNotFoundException, org.hyperic.hq.appdef.shared.AgentNotFoundException, org.hyperic.hq.livedata.shared.LiveDataException;

   /**
    * Get the available commands for a given resources.
    */
   public java.lang.String[] getCommands( org.hyperic.hq.authz.server.session.AuthzSubject subject,org.hyperic.hq.appdef.shared.AppdefEntityID id ) throws org.hyperic.hq.product.PluginException, org.hyperic.hq.authz.shared.PermissionException;

   public void registerFormatter( org.hyperic.hq.livedata.LiveDataFormatter f ) ;

   public void unregisterFormatter( org.hyperic.hq.livedata.LiveDataFormatter f ) ;

   /**
    * Gets a set of {@link LiveDataFormatter}s which are able to format the passed command.
    */
   public java.util.Set findFormatters( org.hyperic.hq.livedata.shared.LiveDataCommand cmd,org.hyperic.hq.livedata.FormatType type ) ;

   /**
    * Find a formatter based on its 'id' property.
    */
   public org.hyperic.hq.livedata.LiveDataFormatter findFormatter( java.lang.String id ) ;

   /**
    * Get the ConfigSchema for a given resource.
    */
   public org.hyperic.util.config.ConfigSchema getConfigSchema( org.hyperic.hq.authz.server.session.AuthzSubject subject,org.hyperic.hq.appdef.shared.AppdefEntityID id,java.lang.String command ) throws org.hyperic.hq.product.PluginException, org.hyperic.hq.authz.shared.PermissionException;

}
