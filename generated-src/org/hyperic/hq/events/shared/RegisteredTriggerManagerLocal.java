/*
 * Generated by XDoclet - Do not edit!
 */
package org.hyperic.hq.events.shared;

/**
 * Local interface for RegisteredTriggerManager.
 */
public interface RegisteredTriggerManagerLocal
   extends javax.ejb.EJBLocalObject
{
   /**
    * Processes {@link TriggerCreatedEvent}s that indicate that triggers should be created
    */
   public void handleTriggerCreatedEvents( java.util.Collection events ) ;

   /**
    * Initialize the in-memory triggers and update the RegisteredTriggers repository
    */
   public void initializeTriggers( org.hyperic.hq.events.ext.RegisterableTriggerRepository registeredTriggerRepository ) ;

   /**
    * Enable or disable triggers associated with an alert definition
    */
   public void setAlertDefinitionTriggersEnabled( java.lang.Integer alertDefId,boolean enabled ) ;

   /**
    * Finds a trigger by its ID, assuming existence
    * @param id The trigger ID
    * @return The trigger with the specified ID (exception will occur if trigger does not exist)
    */
   public org.hyperic.hq.events.server.session.RegisteredTrigger findById( java.lang.Integer id ) ;

   /**
    * Create a new trigger
    * @return a RegisteredTriggerValue
    */
   public org.hyperic.hq.events.server.session.RegisteredTrigger createTrigger( org.hyperic.hq.events.shared.RegisteredTriggerValue val ) ;

   /**
    * Create new triggers
    * @return a RegisteredTriggerValue
    */
   public void createTriggers( org.hyperic.hq.authz.server.session.AuthzSubject subject,org.hyperic.hq.events.shared.AlertDefinitionValue alertdef ) throws org.hyperic.hq.events.TriggerCreateException, org.hyperic.util.config.InvalidOptionException, org.hyperic.util.config.InvalidOptionValueException;

   /**
    * Delete all triggers for an alert definition.
    */
   public void deleteAlertDefinitionTriggers( java.lang.Integer adId ) ;

   /**
    * Completely deletes all triggers when an alert definition is deleted
    */
   public void deleteTriggers( org.hyperic.hq.events.server.session.AlertDefinition alertDef ) ;

}
