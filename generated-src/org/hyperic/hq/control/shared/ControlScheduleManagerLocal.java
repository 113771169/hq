/*
 * Generated by XDoclet - Do not edit!
 */
package org.hyperic.hq.control.shared;

/**
 * Local interface for ControlScheduleManager.
 */
public interface ControlScheduleManagerLocal
   extends javax.ejb.EJBLocalObject
{
   /**
    * Get a list of recent control actions in decending order
    */
   public org.hyperic.util.pager.PageList getRecentControlActions( org.hyperic.hq.authz.server.session.AuthzSubject subject,int rows,long window ) throws org.hyperic.hq.common.ApplicationException;

   /**
    * Get a list of pending control actions in decending order
    */
   public org.hyperic.util.pager.PageList getPendingControlActions( org.hyperic.hq.authz.server.session.AuthzSubject subject,int rows ) throws org.hyperic.hq.common.ApplicationException;

   /**
    * Get a list of most active control operations
    */
   public org.hyperic.util.pager.PageList getOnDemandControlFrequency( org.hyperic.hq.authz.server.session.AuthzSubject subject,int numToReturn ) throws org.hyperic.hq.common.ApplicationException;

   /**
    * Get a list of scheduled jobs based on appdef id
    */
   public org.hyperic.util.pager.PageList findScheduledJobs( org.hyperic.hq.authz.server.session.AuthzSubject subject,org.hyperic.hq.appdef.shared.AppdefEntityID id,org.hyperic.util.pager.PageControl pc ) throws org.hyperic.hq.control.shared.ScheduledJobNotFoundException;

   /**
    * Get a job history based on appdef id
    */
   public org.hyperic.util.pager.PageList findJobHistory( org.hyperic.hq.authz.server.session.AuthzSubject subject,org.hyperic.hq.appdef.shared.AppdefEntityID id,org.hyperic.util.pager.PageControl pc ) throws org.hyperic.hq.authz.shared.PermissionException, org.hyperic.hq.appdef.shared.AppdefEntityNotFoundException, org.hyperic.hq.grouping.shared.GroupNotCompatibleException;

   /**
    * Get a batch job history based on batchJobId and appdef id
    */
   public org.hyperic.util.pager.PageList findGroupJobHistory( org.hyperic.hq.authz.server.session.AuthzSubject subject,int batchId,org.hyperic.hq.appdef.shared.AppdefEntityID id,org.hyperic.util.pager.PageControl pc ) throws org.hyperic.hq.common.ApplicationException;

   /**
    * Remove an entry from the control history
    */
   public void deleteJobHistory( org.hyperic.hq.authz.server.session.AuthzSubject subject,java.lang.Integer[] ids ) throws org.hyperic.hq.common.ApplicationException;

   /**
    * Obtain the current action that is being executed. If there is no current running action, null is returned.
    */
   public org.hyperic.hq.control.server.session.ControlHistory getCurrentJob( org.hyperic.hq.authz.server.session.AuthzSubject whoami,org.hyperic.hq.appdef.shared.AppdefEntityID id ) throws org.hyperic.hq.common.ApplicationException;

   /**
    * Obtain a control history object based on the history id
    */
   public org.hyperic.hq.control.server.session.ControlHistory getJobByJobId( org.hyperic.hq.authz.server.session.AuthzSubject subject,java.lang.Integer id ) throws org.hyperic.hq.common.ApplicationException;

   /**
    * Obtain the last control action that fired. Returns null if there are no previous events. This ignores jobs that are in progress.
    */
   public org.hyperic.hq.control.server.session.ControlHistory getLastJob( org.hyperic.hq.authz.server.session.AuthzSubject subject,org.hyperic.hq.appdef.shared.AppdefEntityID id ) throws org.hyperic.hq.common.ApplicationException;

   /**
    * Obtain a scheduled control action based on an id
    */
   public org.hyperic.hq.control.server.session.ControlSchedule getControlJob( org.hyperic.hq.authz.server.session.AuthzSubject subject,java.lang.Integer id ) throws org.hyperic.hq.product.PluginException;

   /**
    * Delete a scheduled control actions based on id
    */
   public void deleteControlJob( org.hyperic.hq.authz.server.session.AuthzSubject subject,java.lang.Integer[] ids ) throws org.hyperic.hq.product.PluginException;

   /**
    * Removes all jobs associated with an appdef entity
    */
   public void removeScheduledJobs( org.hyperic.hq.authz.server.session.AuthzSubject subject,org.hyperic.hq.appdef.shared.AppdefEntityID id ) throws org.hyperic.hq.control.shared.ScheduledJobRemoveException;

   /**
    * Execute a single action on an appdef entity
    */
   public void doSingleAction( org.hyperic.hq.appdef.shared.AppdefEntityID id,org.hyperic.hq.authz.server.session.AuthzSubject subject,java.lang.String action,java.lang.String args,int[] order ) throws org.hyperic.hq.product.PluginException;

   /**
    * Schedule an action on an appdef entity
    */
   public void doScheduledAction( org.hyperic.hq.appdef.shared.AppdefEntityID id,org.hyperic.hq.authz.server.session.AuthzSubject subject,java.lang.String action,org.hyperic.hq.scheduler.ScheduleValue schedule,int[] order ) throws org.hyperic.hq.product.PluginException, org.quartz.SchedulerException;

   /**
    * Create a control history entry
    */
   public org.hyperic.hq.control.server.session.ControlHistory createHistory( org.hyperic.hq.appdef.shared.AppdefEntityID id,java.lang.Integer groupId,java.lang.Integer batchId,java.lang.String subjectName,java.lang.String action,java.lang.String args,java.lang.Boolean scheduled,long startTime,long stopTime,long scheduleTime,java.lang.String status,java.lang.String description,java.lang.String errorMessage ) ;

   /**
    * Update a control history entry
    */
   public void updateHistory( java.lang.Integer jobId,long endTime,java.lang.String status,java.lang.String message ) throws org.hyperic.hq.common.ApplicationException;

   /**
    * Get a control history value based on primary key
    */
   public org.hyperic.hq.control.server.session.ControlHistory getJobHistoryValue( java.lang.Integer jobId ) throws org.hyperic.hq.common.ApplicationException;

   /**
    * Get a control history value based on primary key
    */
   public void removeHistory( java.lang.Integer id ) throws org.hyperic.hq.common.ApplicationException;

}
