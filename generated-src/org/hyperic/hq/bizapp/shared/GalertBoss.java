/*
 * Generated by XDoclet - Do not edit!
 */
package org.hyperic.hq.bizapp.shared;

/**
 * Remote interface for GalertBoss.
 */
public interface GalertBoss
   extends javax.ejb.EJBObject
{

   public org.hyperic.hq.galerts.server.session.ExecutionStrategyTypeInfo registerExecutionStrategy( int sessionId,org.hyperic.hq.galerts.server.session.ExecutionStrategyType stratType )
      throws org.hyperic.hq.authz.shared.PermissionException, org.hyperic.hq.auth.shared.SessionException, java.rmi.RemoteException;

   public org.hyperic.hq.galerts.server.session.ExecutionStrategyTypeInfo findStrategyType( int sessionId,org.hyperic.hq.galerts.server.session.ExecutionStrategyType type )
      throws org.hyperic.hq.authz.shared.PermissionException, org.hyperic.hq.auth.shared.SessionException, java.rmi.RemoteException;

   public org.hyperic.hq.galerts.server.session.GtriggerTypeInfo findTriggerType( int sessionId,org.hyperic.hq.galerts.server.session.GtriggerType type )
      throws org.hyperic.hq.auth.shared.SessionException, java.rmi.RemoteException;

   public org.hyperic.hq.galerts.server.session.GtriggerTypeInfo registerTriggerType( int sessionId,org.hyperic.hq.galerts.server.session.GtriggerType type )
      throws org.hyperic.hq.auth.shared.SessionException, java.rmi.RemoteException;

   public org.hyperic.hq.galerts.server.session.ExecutionStrategyInfo addPartition( int sessionId,org.hyperic.hq.galerts.server.session.GalertDef def,org.hyperic.hq.galerts.server.session.GalertDefPartition partition,org.hyperic.hq.galerts.server.session.ExecutionStrategyTypeInfo stratType,org.hyperic.util.config.ConfigResponse stratConfig )
      throws org.hyperic.hq.auth.shared.SessionException, java.rmi.RemoteException;

   public org.hyperic.hq.galerts.server.session.GalertDef createAlertDef( int sessionId,java.lang.String name,java.lang.String description,org.hyperic.hq.events.AlertSeverity severity,boolean enabled,org.hyperic.hq.authz.server.session.ResourceGroup group )
      throws org.hyperic.hq.auth.shared.SessionException, java.rmi.RemoteException;

   public void configureTriggers( int sessionId,org.hyperic.hq.galerts.server.session.GalertDef def,org.hyperic.hq.galerts.server.session.GalertDefPartition partition,java.util.List triggerInfos,java.util.List configs )
      throws org.hyperic.hq.auth.shared.SessionException, java.rmi.RemoteException;

   /**
    * Find all the group alert definitions for a given appdef group.
    * @return a collection of {@link AlertDefinitionBean}s
    * @throws PermissionException
    */
   public org.hyperic.util.pager.PageList findDefinitions( int sessionId,java.lang.Integer gid,org.hyperic.util.pager.PageControl pc )
      throws org.hyperic.hq.auth.shared.SessionException, org.hyperic.hq.authz.shared.PermissionException, java.rmi.RemoteException;

   public void markDefsDeleted( int sessionId,org.hyperic.hq.galerts.server.session.GalertDef def )
      throws org.hyperic.hq.auth.shared.SessionException, java.rmi.RemoteException;

   public void markDefsDeleted( int sessionId,java.lang.Integer[] defIds )
      throws org.hyperic.hq.auth.shared.SessionException, java.rmi.RemoteException;

   public org.hyperic.hq.galerts.server.session.GalertDef findDefinition( int sessionId,java.lang.Integer id )
      throws org.hyperic.hq.auth.shared.SessionException, java.rmi.RemoteException;

   public org.hyperic.hq.escalation.server.session.Escalatable findEscalatableAlert( int sessionId,java.lang.Integer id )
      throws org.hyperic.hq.auth.shared.SessionException, org.hyperic.hq.authz.shared.PermissionException, java.rmi.RemoteException;

   public void update( int sessionId,org.hyperic.hq.galerts.server.session.GalertDef def,java.lang.String name,java.lang.String desc,org.hyperic.hq.events.AlertSeverity severity,java.lang.Boolean enabled )
      throws org.hyperic.hq.auth.shared.SessionException, java.rmi.RemoteException;

   public void update( int sessionId,org.hyperic.hq.galerts.server.session.GalertDef def,org.hyperic.hq.escalation.server.session.Escalation escalation )
      throws org.hyperic.hq.auth.shared.SessionException, java.rmi.RemoteException;

   /**
    * Bulk enable or disable GalertDefs
    * @throws SessionException if user session cannot be authenticated
    */
   public void enable( int sessionId,org.hyperic.hq.galerts.server.session.GalertDef[] defs,boolean enable )
      throws org.hyperic.hq.auth.shared.SessionException, java.rmi.RemoteException;

   /**
    * Count the total number of galerts in the time frame
    */
   public int countAlertLogs( int sessionId,java.lang.Integer gid,long begin,long end )
      throws org.hyperic.hq.auth.shared.SessionTimeoutException, org.hyperic.hq.auth.shared.SessionNotFoundException, org.hyperic.hq.authz.shared.PermissionException, java.rmi.RemoteException;

   /**
    * retrieve all escalation policy names as a Array of JSONObject. Escalation json finders begin with json* to be consistent with DAO finder convention
    */
   public org.json.JSONObject findAlertLogs( int sessionId,java.lang.Integer gid,long begin,long end,org.hyperic.util.pager.PageControl pc )
      throws org.json.JSONException, org.hyperic.hq.auth.shared.SessionTimeoutException, org.hyperic.hq.auth.shared.SessionNotFoundException, org.hyperic.hq.authz.shared.PermissionException, java.rmi.RemoteException;

   /**
    * Get the last fix if available
    */
   public java.lang.String getLastFix( int sessionID,org.hyperic.hq.galerts.server.session.GalertDef def )
      throws org.hyperic.hq.auth.shared.SessionNotFoundException, org.hyperic.hq.auth.shared.SessionTimeoutException, java.rmi.RemoteException;

}
