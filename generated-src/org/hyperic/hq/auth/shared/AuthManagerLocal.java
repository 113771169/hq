/*
 * Generated by XDoclet - Do not edit!
 */
package org.hyperic.hq.auth.shared;

/**
 * Local interface for AuthManager.
 */
public interface AuthManagerLocal
   extends javax.ejb.EJBLocalObject
{
   /**
    * Authenticates the user using the given password
    * @param user The user to authenticate
    * @param password The password for the user
    * @return session id that is associated with the user
    */
   public int getSessionId( java.lang.String user,java.lang.String password ) throws java.lang.SecurityException, javax.security.auth.login.LoginException, org.hyperic.util.ConfigPropertyException, org.hyperic.hq.common.ApplicationException;

   /**
    * Get a session ID based on username only
    * @param user The user to authenticate
    * @return session id that is associated with the user
    * @throws ApplicationException if user is not found
    * @throws LoginException if user account has been disabled
    */
   public int getUnauthSessionId( java.lang.String user ) throws org.hyperic.hq.common.ApplicationException;

   /**
    * Add a user to the internal database
    * @param subject The subject of the currently logged in user
    * @param username The username to add
    * @param password The password for this user
    */
   public void addUser( org.hyperic.hq.authz.server.session.AuthzSubject subject,java.lang.String username,java.lang.String password ) ;

   /**
    * Change the password for a user.
    * @param subject The subject of the currently logged in user
    * @param username The username whose password will be changed.
    * @param password The new password for this user
    */
   public void changePassword( org.hyperic.hq.authz.server.session.AuthzSubject subject,java.lang.String username,java.lang.String password ) throws org.hyperic.hq.authz.shared.PermissionException;

   /**
    * Change the hashed password for a user.
    * @param subject The subject of the currently logged in user
    * @param username The username whose password will be changed.
    * @param password The new password for this user
    */
   public void changePasswordHash( org.hyperic.hq.authz.server.session.AuthzSubject subject,java.lang.String username,java.lang.String hash ) throws org.hyperic.hq.authz.shared.PermissionException;

   /**
    * Delete a user from the internal database
    * @param subject The subject of the currently logged in user
    * @param username The user to delete
    */
   public void deleteUser( org.hyperic.hq.authz.server.session.AuthzSubject subject,java.lang.String username ) ;

   /**
    * Check existence of a user
    * @param subject The subject of the currently logged in user
    * @param username The username of the user to get
    */
   public boolean isUser( org.hyperic.hq.authz.server.session.AuthzSubject subject,java.lang.String username ) ;

   /**
    * Get the principle of a user
    * @param subject The subject for whom to return the principle
    */
   public org.hyperic.hq.auth.Principal getPrincipal( org.hyperic.hq.authz.server.session.AuthzSubject subject ) ;

}
