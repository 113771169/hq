/*
 * Generated by XDoclet - Do not edit!
 */
package org.hyperic.hq.appdef.shared;

import java.util.List;

import org.hyperic.hq.authz.server.session.AuthzSubject;
import org.hyperic.hq.authz.shared.PermissionException;
import org.hyperic.hq.common.NotFoundException;

/**
 * Local interface for VirtualManager.
 */
public interface VirtualManager {
    /**
     * Find virtual platforms in a VM Process
     * @return a list of virtual platform values
     */
    public List<PlatformValue> findVirtualPlatformsByVM(AuthzSubject subject, Integer vmId)
        throws PlatformNotFoundException, PermissionException;

    /**
     * Find virtual servers in a VM Process
     * @return a list of virtual server values
     */
    public List<ServerValue> findVirtualServersByVM(AuthzSubject subject, Integer vmId) throws ServerNotFoundException,
        PermissionException;

    /**
     * Find virtual services in a VM Process
     * @return a list of virtual service values
     */
    public List<ServiceValue> findVirtualServicesByVM(AuthzSubject subject, Integer vmId)
        throws ServiceNotFoundException, PermissionException;

    /**
     * Find virtual resources whose parent is the given physical ID
     * @return list of virtual resource values
     */
    public List<AppdefResourceValue> findVirtualResourcesByPhysical(AuthzSubject subject, AppdefEntityID aeid)
        throws AppdefEntityNotFoundException, PermissionException;

    /**
     * Associate an array of entities to a VM
     */
    public void associateEntities(AuthzSubject subj, Integer processId,
                                  org.hyperic.hq.appdef.shared.AppdefEntityID[] aeids);

    /**
     * Associate an array of entities to a VM
     * @throws NotFoundException
     */
    public void associateToPhysical(AuthzSubject subj, Integer physicalId, AppdefEntityID aeid) throws NotFoundException;

}
