/**
* NOTE: This copyright does *not* cover user programs that use HQ
* program services by normal system calls through the application
* program interfaces provided as part of the Hyperic Plug-in Development
* Kit or the Hyperic Client Development Kit - this is merely considered
* normal use of the program, and does *not* fall under the heading of
* "derived work".
*
* Copyright (C) [2004, 2005, 2006], VMware, Inc.
* This file is part of HQ.
*
* HQ is free software; you can redistribute it and/or modify
* it under the terms version 2 of the GNU General Public License as
* published by the Free Software Foundation. This program is distributed
* in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
* even the implied warranty of MERCHANTABILITY or FITNESS FOR A
* PARTICULAR PURPOSE. See the GNU General Public License for more
* details.
*
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software
* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
* USA.
*/

package org.hyperic.hq.product;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Version;
import javax.validation.constraints.NotNull;

import org.hibernate.annotations.GenericGenerator;
import org.hyperic.hibernate.ContainerManagedTimestampTrackable;
import org.hyperic.hq.product.shared.PluginValue;
import org.springframework.datastore.graph.annotation.NodeEntity;

/**
 * Plugin generated by hbm2java
 */
@Entity
@Table(name="EAM_PLUGIN")
@NodeEntity(partial=true)
public class Plugin  implements ContainerManagedTimestampTrackable
{

    @Column(name="NAME",unique=true,length=200,nullable=false)
    private String name;
    
    @Column(name="PATH",length=500,nullable=false)
    private String path;
    
    @Column(name="MD5",length=100,nullable=false)
    private String md5;
    
    @Column(name="CTIME",nullable=false)
    private long creationTime;
    
    @Id
    @GenericGenerator(name = "mygen1", strategy = "increment")  
    @GeneratedValue(generator = "mygen1")  
    @Column(name = "ID")
    private Integer id;

    @Column(name="VERSION_COL")
    @Version
    private Long    version;

    public void setId(Integer id) {
        this.id = id;
    }

    public Integer getId() {
        return id;
    }

    // Constructors

    /**
     * default constructor
     */
    public Plugin()
    {
        super();
    }

    public Plugin(PluginValue pv)
    {
        super();
        setPluginValue(pv);
    }
    
    public Plugin(org.hyperic.hq.pdk.domain.Plugin plugin) {
    	setName(plugin.getName());
    }
    
    /**
     * @see org.hyperic.hibernate.ContainerManagedTimestampTrackable#allowContainerManagedLastModifiedTime()
     * @return <code>true</code> by default.
     */
    public boolean allowContainerManagedCreationTime() {
        return true;
    }
    
    /**
     * @see org.hyperic.hibernate.ContainerManagedTimestampTrackable#allowContainerManagedLastModifiedTime()
     * @return <code>false</code> by default.
     */
    public boolean allowContainerManagedLastModifiedTime() {
        return false;
    }

    // Property accessors
    public String getName()
    {
        return this.name;
    }

    public void setName(String name)
    {
        this.name = name;
    }

    public String getPath()
    {
        return this.path;
    }

    public void setPath(String path)
    {
        this.path = path;
    }

    public String getMD5()
    {
        return this.md5;
    }

    public void setMD5(String md5)
    {
        this.md5 = md5;
    }

    public long getCreationTime()
    {
        return this.creationTime;
    }

    public void setCreationTime(long ctime)
    {
        this.creationTime = ctime;
    }

    /**
     * @deprecated use getCreationTime()
     */
    public long getCtime()
    {
        return getCreationTime();
    }

    /**
     * @deprecated use setCreationTime()
     * @param cTime
     */
    public void setCtime(long cTime)
    {
        setCreationTime(cTime);
    }
    
    public long getVersion() {
        return version;
    }

    protected void setVersion(Long newVer) {
        version = newVer;
    }


    /**
     * @deprecated use (this) Plugin object
     * @return
     */
    public PluginValue getPluginValue()
    {
        PluginValue pluginValue = new PluginValue();
        pluginValue.setId(getId());
        pluginValue.setName(
            (getName() == null) ? "" : getName());
        pluginValue.setPath(
            (getPath() == null) ? "" : getPath());
        pluginValue.setMD5(
            (getMD5() == null) ? "" : getMD5());
        pluginValue.setCtime(getCtime());
        return pluginValue;
    }

    public void setPluginValue(PluginValue valueHolder)
    {
        setName( valueHolder.getName() );
        setPath( valueHolder.getPath() );
        setMD5( valueHolder.getMD5() );
        setCtime( valueHolder.getCtime() );
    }
}


