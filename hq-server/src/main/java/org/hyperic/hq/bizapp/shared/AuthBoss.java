/*
 * Generated by XDoclet - Do not edit!
 */
package org.hyperic.hq.bizapp.shared;

import javax.security.auth.login.LoginException;

import org.hyperic.hq.auth.shared.SessionException;
import org.hyperic.hq.auth.shared.SessionNotFoundException;
import org.hyperic.hq.auth.shared.SessionTimeoutException;
import org.hyperic.hq.authz.shared.PermissionException;
import org.hyperic.hq.common.ApplicationException;

/**
 * Local interface for AuthBoss.
 */
public interface AuthBoss {
    /**
     * Get a session ID based on username only
     * @param user The user to authenticate
     * @return session id that is associated with the user
     * @throws ApplicationException if user is not found
     * @throws LoginException if user account has been disabled
     */
    public int getUnauthSessionId(String user) throws ApplicationException;

    /**
     * Authenticate a user
     * @param username The username
     * @param password The password
     */
    void authenticate(String username, String password);

    /**
     * Add a user to the internal database
     * @param sessionID The session id for the current user
     * @param username The username to add
     * @param password The password for this user
     */
    public void addUser(int sessionID, String username, String password) throws SessionException;

    /**
     * Change a password for a user
     * @param sessionID The session id for the current user
     * @param username The user whose password should be updated
     * @param password The new password for the user
     */
    public void changePassword(int sessionID, String username, String password) throws PermissionException,
        SessionException;

    /**
     * Check existence of a user
     */
    public boolean isUser(int sessionID, String username) throws SessionTimeoutException, SessionNotFoundException;

}
