/*
 * Generated by XDoclet - Do not edit!
 */
package org.hyperic.hq.auth.shared;

import org.hyperic.hq.auth.Principal;
import org.hyperic.hq.authz.server.session.AuthzSubject;
import org.hyperic.hq.authz.shared.PermissionException;

/**
 * Local interface for AuthManager.
 */
public interface AuthManager {

    
    /**
     * Authenticate a user.
     * @param username The name of the user.
     * @param password The password.
     */
    public void authenticate(String username, String password);
    
    
    /**
     * Add a user to the internal database
     * @param subject The subject of the currently logged in user
     * @param username The username to add
     * @param password The password for this user
     */
    public void addUser(AuthzSubject subject, String username, String password);

    /**
     * Change the password for a user.
     * @param subject The subject of the currently logged in user
     * @param username The username whose password will be changed.
     * @param password The new password for this user
     */
    public void changePassword(AuthzSubject subject, String username, String password) throws PermissionException;

    /**
     * Change the hashed password for a user.
     * @param subject The subject of the currently logged in user
     * @param username The username whose password will be changed.
     * @param password The new password for this user
     */
    public void changePasswordHash(AuthzSubject subject, String username, String hash) throws PermissionException;

    /**
     * Delete a user from the internal database
     * @param subject The subject of the currently logged in user
     * @param username The user to delete
     */
    public void deleteUser(AuthzSubject subject, String username);

    /**
     * Check existence of a user
     * @param subject The subject of the currently logged in user
     * @param username The username of the user to get
     */
    public boolean isUser(AuthzSubject subject, String username);

    /**
     * Get the principle of a user
     * @param subject The subject for whom to return the principle
     */
    public Principal getPrincipal(AuthzSubject subject);

}
