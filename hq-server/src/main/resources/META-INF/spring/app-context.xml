<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<!--
		hq-server.conf may be copied to the WEB-INF/classes dir by the
		installer and should override any properties defined in other files,
		so it's last on the list
	-->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
		p:ignoreResourceNotFound="true" p:systemPropertiesModeName="SYSTEM_PROPERTIES_MODE_OVERRIDE">
		<property name="locations">
			<list>
				<value>classpath:/spring-jdbc.properties</value>
				<value>classpath:/mail-config.properties</value>
				<value>classpath:/quartz.properties</value>
				<value>classpath:/jms.properties</value>
				<value>classpath:/hibernate.properties</value>
				<value>file://#{ systemProperties['user.home'] }/.hq/build.properties</value>
				<value>classpath:/hq-server.conf</value>
			</list>
		</property>
		<property name="properties">
			<props>
				<prop key="ha.partition"></prop>
				<prop key="ha.node.address"></prop>
				<prop key="ha.node.mcast_addr">238.1.2.3</prop>
				<prop key="ha.node.mcast_port">45566</prop>
				<prop key="ha.node.cacheListener.port">45567</prop>
				<prop key="ha.node.cacheProvider.port">45568</prop>
				<prop key="ha.node.ipTTL">64</prop>
			</props>
		</property>
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
		<constructor-arg>
			<bean class="org.apache.tomcat.jdbc.pool.DataSource"
				p:driverClassName="${server.database-driver}" p:url="${server.database-url}"
				p:username="${server.database-user}" p:password="${server.database-password}"
				p:defaultAutoCommit="false" p:minIdle="${server.database-minpoolsize}"
				p:maxActive="${server.database-maxpoolsize}" p:maxIdle="${server.database-maxpoolsize}" 
				p:initialSize="${server.database-minpoolsize}"
				p:maxWait="${server.database-blockingtimeout}" p:jdbcInterceptors="ConnectionState;StatementFinalizer"
				p:validationQuery="${server.connection-validation-sql}"
				p:validationInterval="30000" p:logAbandoned="true" p:testOnBorrow="true" />
		</constructor-arg>
	</bean>

	<context:annotation-config />

	<context:component-scan base-package="org.hyperic,com.hyperic" />


	<bean id="sessionFactory"
		class="org.hyperic.hibernate.JmxExposingLocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mappingLocations" value="classpath:/hibernate/**/*.hbm.xml" />
		<property name="hibernateProperties">
			<bean
				class="org.springframework.beans.factory.config.PropertiesFactoryBean"
				p:ignoreResourceNotFound="true">
				<property name="properties">
					<props>
						<prop key="hibernate.connection.driver_class">${server.database-driver}</prop>
						<prop key="hibernate.connection.url">${server.database-url}</prop>
						<prop key="hibernate.connection.username">${server.database-user}</prop>
						<prop key="hibernate.connection.password">${server.database-password}</prop>
						<prop key="hibernate.dialect">${server.hibernate.dialect}</prop>
					</props>
				</property>
				<property name="locations">
					<list>
						<value>classpath:/hibernate.properties</value>
						<value>classpath:/hq-server.conf</value>
					</list>
				</property>
				<property name="localOverride" value="true" />
			</bean>
		</property>
		<property name="entityInterceptor">
			<bean class="org.hyperic.hibernate.HypericInterceptor" />
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		p:defaultTimeout="900">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>


	<tx:annotation-driven />

	<bean class="org.springframework.orm.hibernate3.HibernateTemplate">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<bean id="permissionManager" class="org.hyperic.hq.authz.shared.PermissionManagerFactory"
		factory-method="getPermissionManager" autowire="constructor" />

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="quartzProperties">
			<props>
				<prop key="org.quartz.jobStore.driverDelegateClass">${server.quartzDelegate}</prop>
				<prop key="org.quartz.scheduler.rmi.export">${quartz.scheduler.rmi.export}</prop>
				<prop key="org.quartz.scheduler.rmi.proxy">${quartz.scheduler.rmi.proxy}</prop>
				<prop key="org.quartz.threadPool.class">${quartz.threadPool.class}</prop>
				<prop key="org.quartz.threadPool.threadCount">${quartz.threadPool.threadCount}</prop>
				<prop key="org.quartz.threadPool.threadPriority">${quartz.threadPool.threadPriority}</prop>
				<prop key="org.quartz.jobStore.useProperties">${quartz.jobStore.useProperties}</prop>
			</props>
		</property>
	</bean>

	<bean id="runtimeReportProcessor"
		class="org.hyperic.hq.autoinventory.server.session.RuntimeReportProcessor"
		scope="prototype" />

	<bean class="org.hyperic.hq.appdef.server.session.ResourceTreeGenerator" />


	<bean id="tweakProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean"
		p:location="classpath:/tweak.properties" />


	<context:mbean-export />
	<context:mbean-server />


	<bean class="org.hyperic.hq.transport.ServerTransport">
		<constructor-arg value="4" />
	</bean>

	<!--
		This bean refers to various classes that should be loaded at startup.
		Its only interest is loading the classes listed to have static blocks
		in them executed (which typically register event types)
	-->
	<util:list id="triggers">
		<bean class="org.hyperic.hq.bizapp.server.trigger.conditional.AlertTrigger" />
		<bean
			class="org.hyperic.hq.bizapp.server.trigger.conditional.ConfigChangedTrigger" />
		<bean
			class="org.hyperic.hq.bizapp.server.trigger.conditional.ValueChangeTrigger" />
		<bean
			class="org.hyperic.hq.bizapp.server.trigger.conditional.ControlEventTrigger" />
		<bean
			class="org.hyperic.hq.bizapp.server.trigger.conditional.CustomPropertyTrigger" />
		<bean
			class="org.hyperic.hq.bizapp.server.trigger.conditional.LogEventTrigger" />
		<bean
			class="org.hyperic.hq.bizapp.server.trigger.conditional.MeasurementThresholdTrigger" />
		<bean
			class="org.hyperic.hq.bizapp.server.trigger.conditional.ValueChangeTrigger" />
	</util:list>

	<task:scheduler id="scheduler" />

	<bean class="org.hyperic.hq.application.Scheduler">
		<constructor-arg value="10" />
	</bean>


</beans>
