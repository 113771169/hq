<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:repository="http://www.springframework.org/schema/data/repository"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/data/repository http://www.springframework.org/schema/data/repository/spring-repository.xsd
	    http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

	<bean id="lazyDataSource"
		class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
		<property name="targetDataSource">
			<ref local="tomcatDataSource" />
		</property>
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
		<constructor-arg ref="lazyDataSource" />
	</bean>

	<bean id="tomcatDataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
		p:driverClassName="${server.database-driver}" p:url="${server.database-url}"
		p:username="${server.database-user}" p:password="${server.database-password}"
		p:defaultAutoCommit="false" p:minIdle="${server.database-minpoolsize}"
		p:maxActive="${server.database-maxpoolsize}" p:maxIdle="${server.database-maxpoolsize}"
		p:initialSize="${server.database-minpoolsize}" p:maxWait="${server.database-blockingtimeout}"
		p:jdbcInterceptors="ConnectionState;StatementFinalizer"
		p:validationQuery="${server.connection-validation-sql}"
		p:validationInterval="30000" p:logAbandoned="true" p:testOnBorrow="true" p:defaultTransactionIsolation="2"/>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="persistenceProvider" class="org.hyperic.hibernate.HibernateConfigHolder"/>
	
	<bean id="persistenceUnitMgr"
		class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager">
		<property name="defaultDataSource" ref="dataSource"/>
	</bean>

	<bean class="org.springframework.orm.hibernate3.HibernateTemplate">
		<constructor-arg ref="sessionFactory" />
	</bean>
	
	<bean class="org.springframework.orm.jpa.JpaTemplate">
		<constructor-arg ref="entityManagerFactory" />
	</bean>

	<bean id="sessionFactory"
		class="org.hyperic.hibernate.CacheInitializingLocalSessionFactoryBean">
		<constructor-arg ref="preloadCaches" />
	</bean>
	
	<!-- TODO remove below bean definition once all DAO classes deleted -->
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor">
		<property name="proxyTargetClass" value="true"/>
	</bean>
	
	<jpa:repositories base-package="org.hyperic.hq.**.data"/>

	<util:list id="preloadCaches">
		<value>org.hyperic.hq.agent.mgmt.domain.AgentType</value>
		<value>org.hyperic.hq.agent.mgmt.domain.Agent</value>
		<value>org.hyperic.hq.measurement.server.session.Category</value>
		<value>org.hyperic.hq.measurement.server.session.MonitorableType</value>
		<value>org.hyperic.hq.inventory.domain.Resource</value>
		<value>org.hyperic.hq.inventory.domain.ResourceType</value>
		<value>org.hyperic.hq.inventory.domain.ResourceGroup</value>
		<value>org.hyperic.hq.inventory.domain.Config</value>
		<value>org.hyperic.hq.plugin.mgmt.domain.Plugin</value>
		<value>org.hyperic.hq.inventory.domain.OperationType</value>
		<value>org.hyperic.hq.inventory.domain.PropertyType</value>
		<value>org.hyperic.hq.inventory.domain.ConfigType</value>
		<value>org.hyperic.hq.inventory.domain.ConfigOptionType</value>
	</util:list>
</beans>
