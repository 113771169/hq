package org.hyperic.hq.measurement;
// Generated Oct 19, 2006 11:49:50 AM by Hibernate Tools 3.1.0.beta4


import java.util.Collection;

/**
 * MeasurementTemplate generated by hbm2java
 */
public class MeasurementTemplate  implements java.io.Serializable {

    // Fields    

     private Integer id;
     private long _version_;
     private Integer cid;
     private String name;
     private String alias;
     private String units;
     private Integer collectionType;
     private boolean defaultOn;
     private long defaultInterval;
     private boolean designate;
     private String template;
     private String plugin;
     private byte[] expressionData;
     private long ctime;
     private long mtime;
     private MonitorableType monitorableType;
     private Category category;
     private Collection measurements;
     private Collection measurementArgs;

     // Constructors

    /** default constructor */
    public MeasurementTemplate() {
    }

	/** minimal constructor */
    public MeasurementTemplate(String name, String alias, Integer collectionType, boolean defaultOn, long defaultInterval, boolean designate, String template, long ctime, long mtime) {
        this.name = name;
        this.alias = alias;
        this.collectionType = collectionType;
        this.defaultOn = defaultOn;
        this.defaultInterval = defaultInterval;
        this.designate = designate;
        this.template = template;
        this.ctime = ctime;
        this.mtime = mtime;
    }
    /** full constructor */
    public MeasurementTemplate(Integer cid, String name, String alias, String units, Integer collectionType, boolean defaultOn, long defaultInterval, boolean designate, String template, String plugin, byte[] expressionData, long ctime, long mtime, MonitorableType monitorableType, Category category, Collection measurements, Collection measurementArgs) {
        this.cid = cid;
        this.name = name;
        this.alias = alias;
        this.units = units;
        this.collectionType = collectionType;
        this.defaultOn = defaultOn;
        this.defaultInterval = defaultInterval;
        this.designate = designate;
        this.template = template;
        this.plugin = plugin;
        this.expressionData = expressionData;
        this.ctime = ctime;
        this.mtime = mtime;
        this.monitorableType = monitorableType;
        this.category = category;
        this.measurements = measurements;
        this.measurementArgs = measurementArgs;
    }
    
   
    // Property accessors
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }
    public long get_version_() {
        return this._version_;
    }
    
    public void set_version_(long _version_) {
        this._version_ = _version_;
    }
    public Integer getCid() {
        return this.cid;
    }
    
    public void setCid(Integer cid) {
        this.cid = cid;
    }
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    public String getAlias() {
        return this.alias;
    }
    
    public void setAlias(String alias) {
        this.alias = alias;
    }
    public String getUnits() {
        return this.units;
    }
    
    public void setUnits(String units) {
        this.units = units;
    }
    public Integer getCollectionType() {
        return this.collectionType;
    }
    
    public void setCollectionType(Integer collectionType) {
        this.collectionType = collectionType;
    }
    public boolean isDefaultOn() {
        return this.defaultOn;
    }
    
    public void setDefaultOn(boolean defaultOn) {
        this.defaultOn = defaultOn;
    }
    public long getDefaultInterval() {
        return this.defaultInterval;
    }
    
    public void setDefaultInterval(long defaultInterval) {
        this.defaultInterval = defaultInterval;
    }
    public boolean isDesignate() {
        return this.designate;
    }
    
    public void setDesignate(boolean designate) {
        this.designate = designate;
    }
    public String getTemplate() {
        return this.template;
    }
    
    public void setTemplate(String template) {
        this.template = template;
    }
    public String getPlugin() {
        return this.plugin;
    }
    
    public void setPlugin(String plugin) {
        this.plugin = plugin;
    }
    public byte[] getExpressionData() {
        return this.expressionData;
    }
    
    public void setExpressionData(byte[] expressionData) {
        this.expressionData = expressionData;
    }
    public long getCtime() {
        return this.ctime;
    }
    
    public void setCtime(long ctime) {
        this.ctime = ctime;
    }
    public long getMtime() {
        return this.mtime;
    }
    
    public void setMtime(long mtime) {
        this.mtime = mtime;
    }
    public MonitorableType getMonitorableType() {
        return this.monitorableType;
    }
    
    public void setMonitorableType(MonitorableType monitorableType) {
        this.monitorableType = monitorableType;
    }
    public Category getCategory() {
        return this.category;
    }
    
    public void setCategory(Category category) {
        this.category = category;
    }
    public Collection getMeasurements() {
        return this.measurements;
    }
    
    public void setMeasurements(Collection measurements) {
        this.measurements = measurements;
    }
    public Collection getMeasurementArgs() {
        return this.measurementArgs;
    }
    
    public void setMeasurementArgs(Collection measurementArgs) {
        this.measurementArgs = measurementArgs;
    }


   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof MeasurementTemplate) ) return false;
		 MeasurementTemplate castOther = ( MeasurementTemplate ) other; 
         
		 return ( (this.getId()==castOther.getId()) || ( this.getId()!=null && castOther.getId()!=null && this.getId().equals(castOther.getId()) ) );
   }
   
   public int hashCode() {
         int result = 17;
         
         result = 37 * result + ( getId() == null ? 0 : this.getId().hashCode() );
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         return result;
   }   

  // The following is extra code specified in the hbm.xml files

      public void addMeasurement(Measurement m)
      {
          Collection coll = getMeasurements();
          if (m != null && coll != null) {
              m.setTemplate(this);
              coll.add(m);
          }
      }

      public void addTemplateArg(MeasurementArg a)
      {
          Collection coll = getMeasurementArgs();
          if (a != null && coll != null) {
              a.setTemplateArg(this);
              coll.add(a);
          }
      }
    
  // end of extra code specified in the hbm.xml files

}


