/*                                                                 
 * NOTE: This copyright does *not* cover user programs that use HQ 
 * program services by normal system calls through the application 
 * program interfaces provided as part of the Hyperic Plug-in Development 
 * Kit or the Hyperic Client Development Kit - this is merely considered 
 * normal use of the program, and does *not* fall under the heading of 
 * "derived work". 
 *  
 * Copyright (C) [2004, 2005, 2006], Hyperic, Inc. 
 * This file is part of HQ.         
 *  
 * HQ is free software; you can redistribute it and/or modify 
 * it under the terms version 2 of the GNU General Public License as 
 * published by the Free Software Foundation. This program is distributed 
 * in the hope that it will be useful, but WITHOUT ANY WARRANTY; without 
 * even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
 * PARTICULAR PURPOSE. See the GNU General Public License for more 
 * details. 
 *                
 * You should have received a copy of the GNU General Public License 
 * along with this program; if not, write to the Free Software 
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 
 * USA. 
 */

package org.hyperic.hq.measurement;
// Generated Oct 19, 2006 11:49:50 AM by Hibernate Tools 3.1.0.beta4



/**
 * DerivedMeasurement generated by hbm2java
 */
public class DerivedMeasurement extends org.hyperic.hq.measurement.Measurement implements java.io.Serializable {

    // Fields    

     private boolean enabled;
     private long interval;
     private String formula;

     // Constructors

    /** default constructor */
    public DerivedMeasurement() {
    }

	/** minimal constructor */
    public DerivedMeasurement(Integer instanceId, long mtime, boolean enabled) {
        super(instanceId, mtime);        
        this.enabled = enabled;
    }
    /** full constructor */
    public DerivedMeasurement(Integer instanceId, MeasurementTemplate template, Integer cid, long mtime, Integer appdefType, boolean enabled, long interval, String formula, Baseline baseline) {
        super(instanceId, template, cid, mtime, appdefType);        
        this.enabled = enabled;
        this.interval = interval;
        this.formula = formula;
        this.baseline = baseline;
    }
    
   
    // Property accessors
    public boolean isEnabled() {
        return this.enabled;
    }
    
    public void setEnabled(boolean enabled) {
        this.enabled = enabled;
    }
    public long getInterval() {
        return this.interval;
    }
    
    public void setInterval(long interval) {
        this.interval = interval;
    }
    public String getFormula() {
        return this.formula;
    }
    
    public void setFormula(String formula) {
        this.formula = formula;
    }



  // The following is extra code specified in the hbm.xml files

      private Baseline baseline;
      public void setBaseline(Baseline b)
      {
          if (b != null) {
              b.setDerivedMeasurement(this);
          }
          this.baseline = b;
      }

      public Baseline getBaseline()
      {
          return this.baseline;
      }
      
  // end of extra code specified in the hbm.xml files

}


