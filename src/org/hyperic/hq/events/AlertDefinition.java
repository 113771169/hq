/*                                                                 
 * NOTE: This copyright does *not* cover user programs that use HQ 
 * program services by normal system calls through the application 
 * program interfaces provided as part of the Hyperic Plug-in Development 
 * Kit or the Hyperic Client Development Kit - this is merely considered 
 * normal use of the program, and does *not* fall under the heading of 
 * "derived work". 
 *  
 * Copyright (C) [2004, 2005, 2006], Hyperic, Inc. 
 * This file is part of HQ.         
 *  
 * HQ is free software; you can redistribute it and/or modify 
 * it under the terms version 2 of the GNU General Public License as 
 * published by the Free Software Foundation. This program is distributed 
 * in the hope that it will be useful, but WITHOUT ANY WARRANTY; without 
 * even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
 * PARTICULAR PURPOSE. See the GNU General Public License for more 
 * details. 
 *                
 * You should have received a copy of the GNU General Public License 
 * along with this program; if not, write to the Free Software 
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 
 * USA. 
 */

package org.hyperic.hq.events;
// Generated Oct 17, 2006 12:40:43 PM by Hibernate Tools 3.1.0.beta4


import java.util.Collection;

/**
 * AlertDefinition generated by hbm2java
 */
public class AlertDefinition  implements java.io.Serializable {

    // Fields    

     private Integer id;
     private long _version_;
     private String name;
     private long ctime;
     private long mtime;
     private Integer parentId;
     private String description;
     private Integer priority;
     private Integer appdefId;
     private Integer appdefType;
     private boolean enabled;
     private Integer frequencyType;
     private long count;
     private long range;
     private boolean willRecover;
     private boolean notifyFiltered;
     private boolean controlFiltered;
     private Integer actOnTriggerId;
     private boolean deleted;
     private Collection actions;
     private Collection alerts;
     private Collection alertConditions;
     private Collection triggers;

     // Constructors

    /** default constructor */
    public AlertDefinition() {
    }

	/** minimal constructor */
    public AlertDefinition(String name, long ctime, long mtime, Integer priority, Integer appdefId, Integer appdefType, boolean enabled, Integer frequencyType, boolean willRecover, boolean notifyFiltered, boolean controlFiltered, boolean deleted) {
        this.name = name;
        this.ctime = ctime;
        this.mtime = mtime;
        this.priority = priority;
        this.appdefId = appdefId;
        this.appdefType = appdefType;
        this.enabled = enabled;
        this.frequencyType = frequencyType;
        this.willRecover = willRecover;
        this.notifyFiltered = notifyFiltered;
        this.controlFiltered = controlFiltered;
        this.deleted = deleted;
    }
    /** full constructor */
    public AlertDefinition(String name, long ctime, long mtime, Integer parentId, String description, Integer priority, Integer appdefId, Integer appdefType, boolean enabled, Integer frequencyType, long count, long range, boolean willRecover, boolean notifyFiltered, boolean controlFiltered, Integer actOnTriggerId, boolean deleted, Collection actions, Collection alerts, Collection alertConditions, Collection triggers) {
        this.name = name;
        this.ctime = ctime;
        this.mtime = mtime;
        this.parentId = parentId;
        this.description = description;
        this.priority = priority;
        this.appdefId = appdefId;
        this.appdefType = appdefType;
        this.enabled = enabled;
        this.frequencyType = frequencyType;
        this.count = count;
        this.range = range;
        this.willRecover = willRecover;
        this.notifyFiltered = notifyFiltered;
        this.controlFiltered = controlFiltered;
        this.actOnTriggerId = actOnTriggerId;
        this.deleted = deleted;
        this.actions = actions;
        this.alerts = alerts;
        this.alertConditions = alertConditions;
        this.triggers = triggers;
    }
    
   
    // Property accessors
    public Integer getId() {
        return this.id;
    }
    
    private void setId(Integer id) {
        this.id = id;
    }
    public long get_version_() {
        return this._version_;
    }
    
    public void set_version_(long _version_) {
        this._version_ = _version_;
    }
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    public long getCtime() {
        return this.ctime;
    }
    
    public void setCtime(long ctime) {
        this.ctime = ctime;
    }
    public long getMtime() {
        return this.mtime;
    }
    
    public void setMtime(long mtime) {
        this.mtime = mtime;
    }
    public Integer getParentId() {
        return this.parentId;
    }
    
    public void setParentId(Integer parentId) {
        this.parentId = parentId;
    }
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }
    public Integer getPriority() {
        return this.priority;
    }
    
    public void setPriority(Integer priority) {
        this.priority = priority;
    }
    public Integer getAppdefId() {
        return this.appdefId;
    }
    
    public void setAppdefId(Integer appdefId) {
        this.appdefId = appdefId;
    }
    public Integer getAppdefType() {
        return this.appdefType;
    }
    
    public void setAppdefType(Integer appdefType) {
        this.appdefType = appdefType;
    }
    public boolean isEnabled() {
        return this.enabled;
    }
    
    public void setEnabled(boolean enabled) {
        this.enabled = enabled;
    }
    public Integer getFrequencyType() {
        return this.frequencyType;
    }
    
    public void setFrequencyType(Integer frequencyType) {
        this.frequencyType = frequencyType;
    }
    public long getCount() {
        return this.count;
    }
    
    public void setCount(long count) {
        this.count = count;
    }
    public long getRange() {
        return this.range;
    }
    
    public void setRange(long range) {
        this.range = range;
    }
    public boolean isWillRecover() {
        return this.willRecover;
    }
    
    public void setWillRecover(boolean willRecover) {
        this.willRecover = willRecover;
    }
    public boolean isNotifyFiltered() {
        return this.notifyFiltered;
    }
    
    public void setNotifyFiltered(boolean notifyFiltered) {
        this.notifyFiltered = notifyFiltered;
    }
    public boolean isControlFiltered() {
        return this.controlFiltered;
    }
    
    public void setControlFiltered(boolean controlFiltered) {
        this.controlFiltered = controlFiltered;
    }
    public Integer getActOnTriggerId() {
        return this.actOnTriggerId;
    }
    
    public void setActOnTriggerId(Integer actOnTriggerId) {
        this.actOnTriggerId = actOnTriggerId;
    }
    public boolean isDeleted() {
        return this.deleted;
    }
    
    public void setDeleted(boolean deleted) {
        this.deleted = deleted;
    }
    public Collection getActions() {
        return this.actions;
    }
    
    public void setActions(Collection actions) {
        this.actions = actions;
    }
    public Collection getAlerts() {
        return this.alerts;
    }
    
    public void setAlerts(Collection alerts) {
        this.alerts = alerts;
    }
    public Collection getAlertConditions() {
        return this.alertConditions;
    }
    
    public void setAlertConditions(Collection alertConditions) {
        this.alertConditions = alertConditions;
    }
    public Collection getTriggers() {
        return this.triggers;
    }
    
    public void setTriggers(Collection triggers) {
        this.triggers = triggers;
    }




}


