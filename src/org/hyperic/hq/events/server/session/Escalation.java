package org.hyperic.hq.events.server.session;

import org.hyperic.hibernate.PersistedObject;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Collections;

/**
 * Escalation generated by hbm2java
 */
public class Escalation extends PersistedObject {

    // Fields

    private String name;

    /**
     * If true, then wait for "waitTime" before escalating up the chain.
     */
    private boolean pause;

    /**
     * waitTime is specified in milliseconds.
     */
    private long waitTime;

    /**
     * if true, then send notification to all the people on the escalation
     * chain.
     * Else, send notification to only those people who have been previously
     * notified.
     */
    private boolean notifyAll;
    private long creationTime;
    private long modifiedTime;
    private List actions = new ArrayList(0);
    private Collection alertDefinitions = new ArrayList();

    public static Escalation createEscalation(String name) {
        Escalation e = new Escalation();
        e.setName(name);
        return e;
    }

    public static Escalation createFinder() {
        return new Escalation();
    }
    
    // Constructors

    /**
     * default constructor
     */
    protected Escalation() {
    }

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    /**
     * If true, then wait for "waitTime" before escalating up the chain.
     */
    public boolean isPause() {
        return this.pause;
    }

    public void setPause(boolean pause) {
        this.pause = pause;
    }

    /**
     * waitTime is specified in milliseconds.
     */
    public long getWaitTime() {
        return this.waitTime;
    }

    public void setWaitTime(long waitTime) {
        this.waitTime = waitTime;
    }

    /**
     * if true, then send notification to all the people on the escalation
     * chain.
     * Else, send notification to only those people who have been previously
     * notified.
     */
    public boolean isNotifyAll() {
        return this.notifyAll;
    }

    public void setNotifyAll(boolean notifyAll) {
        this.notifyAll = notifyAll;
    }

    public long getCreationTime() {
        return this.creationTime;
    }

    public void setCreationTime(long creationTime) {
        this.creationTime = creationTime;
    }

    public long getModifiedTime() {
        return this.modifiedTime;
    }

    public void setModifiedTime(long modifiedTime) {
        this.modifiedTime = modifiedTime;
    }

    public List getActions() {
        return actions;
    }

    protected void setActions(List actions) {
        this.actions = actions;
    }

    public void addAction(Action action) {
        actions.add(action);
        action.setEscalation(this);
    }

    public Collection getAlertDefinitions() {
        return alertDefinitions;
    }

    protected void setAlertDefinitions(Collection alertDefinitions) {
        this.alertDefinitions = alertDefinitions;
    }

    public boolean equals(Object obj) {
        if (!(obj instanceof Escalation) || !super.equals(obj)) {
            return false;
        }
        Escalation o = (Escalation)obj;
        return (getName() == o.getName() ||
                (getName()!=null && o.getName()!=null &&
                 getName().equals(o.getName())));
    }

    public int hashCode() {
        int result = super.hashCode();

        result = 37*result + (getName()!=null ? getName().hashCode() : 0);

        return result;
    }

}


