/*
* NOTE: This copyright does *not* cover user programs that use HQ
* program services by normal system calls through the application
* program interfaces provided as part of the Hyperic Plug-in Development
* Kit or the Hyperic Client Development Kit - this is merely considered
* normal use of the program, and does *not* fall under the heading of
* "derived work".
*
* Copyright (C) [2004, 2005, 2006], Hyperic, Inc.
* This file is part of HQ.
*
* HQ is free software; you can redistribute it and/or modify
* it under the terms version 2 of the GNU General Public License as
* published by the Free Software Foundation. This program is distributed
* in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
* even the implied warranty of MERCHANTABILITY or FITNESS FOR A
* PARTICULAR PURPOSE. See the GNU General Public License for more
* details.
*
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software
* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
* USA.
*/

package org.hyperic.hq.common;

import org.hyperic.hibernate.PersistedObject;

/**
 * ConfigProperty generated by hbm2java
 */
public class ConfigProperty extends PersistedObject
{
    // Fields
    private String prefix;
    private String key;
    private String value;
    private String defaultValue;
    private boolean readOnly = false;

    // Constructors

    /**
     * default constructor
     */
    public ConfigProperty()
    {
        super();
    }

    // Property accessors

    public String getPrefix()
    {
        return this.prefix;
    }

    public void setPrefix(String prefix)
    {
        this.prefix = prefix;
    }

    public String getKey()
    {
        return this.key;
    }

    public void setKey(String propKey)
    {
        this.key = propKey;
    }

    public String getValue()
    {
        return this.value;
    }

    public void setValue(String propValue)
    {
        this.value = propValue;
    }

    public String getDefaultValue()
    {
        return this.defaultValue;
    }

    public void setDefaultValue(String defaultPropValue)
    {
        this.defaultValue = defaultPropValue;
    }

    public boolean isReadOnly()
    {
        return this.readOnly;
    }

    /**
     * @deprecated use isReadOnly()
     * @return
     */
    public boolean getReadOnly()
    {
        return isReadOnly();
    }

    public void setReadOnly(boolean flag)
    {
        this.readOnly = flag;
    }

    public boolean equals(Object obj)
    {
        if (!(obj instanceof ConfigProperty) || !super.equals(obj)) {
            return false;
        }
        ConfigProperty o = (ConfigProperty) obj;
        return
               ((prefix == o.getPrefix()) ||
                (prefix != null && o.getPrefix() != null &&
                 prefix.equals(o.getPrefix())))
               &&
               ((key == o.getKey()) ||
                (key != null && o.getKey() != null &&
                 key.equals(o.getKey())));
    }

    public int hashCode()
    {
        int result = super.hashCode();

        result = 37*result + (prefix != null ? prefix.hashCode() : 0);
        result = 37*result + (key != null ? key.hashCode() : 0);

        return result;
    }
}


