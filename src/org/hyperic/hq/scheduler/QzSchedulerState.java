package org.hyperic.hq.scheduler;
// Generated Nov 3, 2006 4:40:15 PM by Hibernate Tools 3.1.0.beta4



/**
 * QzSchedulerState generated by hbm2java
 */
public class QzSchedulerState  implements java.io.Serializable {

    // Fields    

     private String instanceName;
     private long lastCheckinTime;
     private long checkinInterval;
     private String recoverer;

     // Constructors

    /** default constructor */
    public QzSchedulerState() {
    }

	/** minimal constructor */
    public QzSchedulerState(String instanceName, long lastCheckinTime, long checkinInterval) {
        this.instanceName = instanceName;
        this.lastCheckinTime = lastCheckinTime;
        this.checkinInterval = checkinInterval;
    }
    /** full constructor */
    public QzSchedulerState(String instanceName, long lastCheckinTime, long checkinInterval, String recoverer) {
        this.instanceName = instanceName;
        this.lastCheckinTime = lastCheckinTime;
        this.checkinInterval = checkinInterval;
        this.recoverer = recoverer;
    }
    
   
    // Property accessors
    public String getInstanceName() {
        return this.instanceName;
    }
    
    public void setInstanceName(String instanceName) {
        this.instanceName = instanceName;
    }
    public long getLastCheckinTime() {
        return this.lastCheckinTime;
    }
    
    public void setLastCheckinTime(long lastCheckinTime) {
        this.lastCheckinTime = lastCheckinTime;
    }
    public long getCheckinInterval() {
        return this.checkinInterval;
    }
    
    public void setCheckinInterval(long checkinInterval) {
        this.checkinInterval = checkinInterval;
    }
    public String getRecoverer() {
        return this.recoverer;
    }
    
    public void setRecoverer(String recoverer) {
        this.recoverer = recoverer;
    }


   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof QzSchedulerState) ) return false;
		 QzSchedulerState castOther = ( QzSchedulerState ) other; 
         
		 return ( (this.getInstanceName()==castOther.getInstanceName()) || ( this.getInstanceName()!=null && castOther.getInstanceName()!=null && this.getInstanceName().equals(castOther.getInstanceName()) ) );
   }
   
   public int hashCode() {
         int result = 17;
         
         result = 37 * result + ( getInstanceName() == null ? 0 : this.getInstanceName().hashCode() );
         
         
         
         return result;
   }   


}


