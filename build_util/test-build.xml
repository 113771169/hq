<?xml version="1.0"?>

<project name="test-build" basedir="..">

	<property name="clover.output.dir" value="${build.dir}/clover" />
	<property name="clover.db.file" value="${clover.output.dir}/db/clover.db" />
	<property name="clover.enforce" value="false" />
	<property name="clover.coverage" value="0%" />


	<target name="init-tests">
		<delete dir="${junitResults.dir}" />
		<mkdir dir="${junitResults.dir}" />
		<condition property="test.halt" value="false" else="true">
			<istrue value="${ci.build}" />
		</condition>
		<echo message="Halt on error or failure: ${test.halt}" />
	</target>

	<macrodef name="test-compile">
		<attribute name="module.dir" />
		<attribute name="compile.classpath.id" />
		<sequential>
			<path id="test.compile.classpath">
				<path refid="@{compile.classpath.id}" />
				<path location="@{module.dir}/target/classes" />
			</path>
			<compile-sources classpath.id="test.compile.classpath" src.dir="@{module.dir}/src/test/java" resource.dir="@{module.dir}/src/test/resources" output.dir="@{module.dir}/target/test-classes" />
		</sequential>
	</macrodef>

	<macrodef name="test-run">
		<attribute name="classpath.id" />
		<attribute name="module.dir" />
		<sequential>
			<path id="test.run.classpath">
				<path refid="@{classpath.id}" />
				<path location="@{module.dir}/target/classes" />
				<path location="@{module.dir}/target/test-classes" />
			</path>
			<junit reloading="no" fork="true" forkmode="once" printsummary="yes" haltOnError="${test.halt}" haltOnFailure="${test.halt}" clonevm="true">
				<jvmarg value="-Dtest.halt=${test.halt}" />
				<jvmarg value="-Xmx512m" />
				<classpath refid="test.run.classpath" />

				<formatter type="xml" />
				<batchtest todir="${junitResults.dir}">
					<fileset dir="@{module.dir}/target/test-classes">
						<include name="**/*Test.class" />
					</fileset>
				</batchtest>
			</junit>
		</sequential>
	</macrodef>

	<path id="clover.classpath">
		<pathelement location="${thirdparty.lib}/com.springsource.com.cenqua.clover-2.4.2.jar" />
	</path>

	<target name="clover" depends="clover.pre, instrument-tests, run-tests" description="Executes all tests resulting from a compilation of the test tree returning test coverage metrics." />

	<target name="clover.pre">
		<delete dir="${clover.output.dir}" quiet="true" />
		<mkdir dir="${clover.output.dir}" />
	</target>

	<macrodef name="instrument-module">
		<attribute name="input.dir" />
		<attribute name="output.dir" />
		<attribute name="resource.dir" />
		<attribute name="staging.dir" />
		<attribute name="classpath.id" />
		<sequential>
			<mkdir dir="@{staging.dir}" />
			<instrument input.dir="@{input.dir}" output.dir="@{staging.dir}" />
			<compile-sources classpath.id="@{classpath.id}" src.dir="@{staging.dir}" resource.dir="@{resource.dir}" output.dir="@{output.dir}" />
		</sequential>
	</macrodef>

	<target name="clover.init">
		<taskdef resource="cloverlib.xml" classpathref="clover.classpath" />
	</target>

	<target name="clover.post" depends="clover.init">
		<clover-report initstring="${clover.db.file}">
			<current outfile="${clover.output.dir}/clover.xml">
				<format type="xml" />
			</current>
		</clover-report>
		<clover-report initstring="${clover.db.file}">
			<current outfile="${clover.output.dir}/html">
				<format type="html" />
			</current>
		</clover-report>
		<clover-report initstring="${clover.db.file}">
			<current outfile="${clover.output.dir}/clover.pdf" summary="true">
				<format type="pdf" />
			</current>
		</clover-report>
		<clover-check initstring="${clover.db.file}" target="${clover.coverage}" haltOnFailure="${clover.enforce}" />
	</target>

	<macrodef name="instrument">
		<attribute name="input.dir" />
		<attribute name="output.dir" />
		<sequential>
			<echo message="Output dir @{output.dir} Input dir @{input.dir} ${clover.db.file}" />
			<clover-instr initstring="${clover.db.file}" destdir="@{output.dir}" source="1.5">
				<fileset dir="@{input.dir}">
					<include name="**/*.java" />
				</fileset>
			</clover-instr>
			<copy todir="@{output.dir}">
				<fileset dir="@{input.dir}">
					<exclude name="**/*.java" />
					<exclude name="*.java" />
				</fileset>
			</copy>
		</sequential>
	</macrodef>


</project>