<?xml version="1.0"?>

<project name="hqu-build" basedir="..">

	<property name="rendit_sys.dir" value="${hq.home}/hq-rendit" />
	<property name="hqu.deployed.dir" value="${tomcat.deploy.dir}/ROOT/hqu" />
	<property name="hqu.deployed.rendit_sys.dir" value="${tomcat.deploy.dir}/ROOT/WEB-INF/rendit_sys" />


	<target name="hqu-init" unless="hqu-init.notrequired">
		<macrodef name="hqu-copy">
			<attribute name="wardir" />
			<attribute name="plugindir" />
			<sequential>
				<mkdir dir="@{wardir}/hqu" />
				<copy todir="@{wardir}/hqu">
					<fileset dir="${plugindir}">
						<exclude name="scaffold/**" />
						<exclude name="extra/**" />
						<exclude name="old/**" />
						<exclude name="**/.classpath" />
						<exclude name="**/.project" />
						<exclude name="**/target/**" />
					</fileset>
				</copy>
			</sequential>
		</macrodef>

		<macrodef name="hqu-redeploy-plugin">
			<attribute name="wardir" />
			<attribute name="plugin" />
			<sequential>
				<delete dir="${hqu.deployed.dir}/@{plugin}" />
				<sleep seconds="2" />
				<copy todir="@{wardir}/hqu/@{plugin}">
					<fileset dir="${basedir}/hq-ui-plugins/@{plugin}" />
				</copy>
			</sequential>
		</macrodef>

		<path id="compile.classpath">
			<path refid="alljars" />
			<path refid="testjars" />
			<path location="${hq.common}/target/classes" />
			<path location="${hq.pdk.shared}/target/classes" />
			<path location="${hq.util}/target/classes" />
			<path location="${hq.web}/target/classes" />
		</path>

		<taskdef name="groovydoc" classname="org.codehaus.groovy.ant.Groovydoc" classpathref="compile.classpath" />

		<taskdef name="groovyc" classname="org.codehaus.groovy.ant.Groovyc">
			<classpath refid="compile.classpath" />
		</taskdef>

		<property name="hqu-init.notrequired" value="true" />
	</target>

	<!-- HQU == UI Plugins -->
	<target name="hqu-deploy" depends="hqu-init">
		<property name="wardir" value="${tomcat.deploy.dir}/ROOT" />
		<property name="plugindir" value="${basedir}/hq-ui-plugins" />
		<hqu-copy wardir="${wardir}" plugindir="{plugindir}" />
	</target>

	<target name="compile-rendit" depends="hqu-init">
		<mkdir dir="${rendit_sys.dir}/target/classes" />
		<!-- compile the groovy scripts as a check -->
		<groovyc destdir="${rendit_sys.dir}/target/classes" srcdir="${rendit_sys.dir}/src/main/java" listfiles="true">
			<classpath refid="compile.classpath" />
		</groovyc>
		<copy todir="${rendit_sys.dir}/target/classes">
			<fileset dir="${rendit_sys.dir}/src/main/resources" />
		</copy>
	</target>

	<target name="pack-rendit">
		<mkdir dir="${build.dir}" />
		<!-- compiled classes -->
		<jar file="${build.dir}/hqu-groovy.jar" basedir="${rendit_sys.dir}/target/classes" />

		<!-- script sources -->
		<jar file="${build.dir}/hqu-groovy-source.jar" basedir="${rendit_sys.dir}/src/main/java" />
	</target>

	<target name="hqu-undeploy" depends="hqu-init">
		<delete dir="${hqu.deployed.dir}" />
		<mkdir dir="${hqu.deployed.dir}" />
		<delete dir="${hqu.deployed.rendit_sys.dir}" />
	</target>

	<target name="hqu-redeploy-plugin" depends="hqu-init">
		<hqu-redeploy-plugin wardir="${tomcat.deploy.dir}/ROOT" plugin="${plugin}" />
	</target>

	<target name="hqu-gen-scaffold" depends="hqu-init">
		<echo>
    Use this task to generate a basic HQ plugin.

    Syntax:  hqu-gen-scaffold -Dplugin=cool -Dcontroller=Registry -DcontrollerDir=registry

    Where:  -Dplugin=         used to specify the short, plugin directory name
            -Dcontroller=     Must be upper-case, specifies controlller in /app (ex:  Alert)
            -DcontrollerDir=  must be lower-case, specifies views in /views/{dir}  (ex: alert)
    </echo>

		<fail unless="plugin" />
		<fail unless="controller" />
		<fail unless="controllerDir" />

		<property name="targetDir" value="${basedir}/hq-ui-plugins/${plugin}" />
		<available property="target.exists" file="${targetDir}" />
		<fail if="target.exists">
       Plugin at ${targetDir} already exists.
    </fail>

		<copy todir="${basedir}/hq-ui-plugins/${plugin}" overwrite="false" verbose="true">
			<fileset dir="${hq.home}/hq-ui-plugins/scaffold" />
		</copy>

		<replace dir="${targetDir}" token="@PLUGIN_NAME@" value="${plugin}" />
		<replace dir="${targetDir}" token="@CONTROLLER_NAME@" value="${controller}" />
		<replace dir="${targetDir}" token="@CONTROLLER_DIR@" value="${controllerDir}" />
		<replace dir="${targetDir}" token="@NEW_PLUGIN_PATH@" value="${targetDir}" />

		<move file="${targetDir}/etc/scaffold_i18n.properties" overwrite="false" tofile="${targetDir}/etc/${plugin}_i18n.properties" />

		<move file="${targetDir}/app/SampleController.groovy" overwrite="false" tofile="${targetDir}/app/${controller}Controller.groovy" />

		<move file="${targetDir}/views/sample" overwrite="false" tofile="${targetDir}/views/${controllerDir}" />

		<echo>
                Your plugin is in:           ${targetDir}
                To deploy it to your server:  ant hqu-redeploy-plugin -Dplugin=${plugin}
                The URL to access it:  localhost:7080/hqu/${plugin}/${controllerDir}/index.hqu
        </echo>
	</target>

	<target name="hqu-doc" depends="hqu-init,init-taskdefs">

		<taskdef name="groovydoc" classname="org.codehaus.groovy.ant.Groovydoc" classpathref="alljars" />

		<groovydoc destdir="${build.dir}/hqudoc" sourcepath="${build.dir}/hq.war/WEB-INF/rendit_sys" use="true" windowtitle="groovydoc" private="false" />
	</target>

</project>
