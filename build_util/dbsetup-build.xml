<?xml version="1.0"?>

<project name="dbsetup-build" basedir="..">

	<!-- ==================== DBSetup ==================== -->
	<target name="dbsetup-init" depends="init-install-taskdefs" unless="dbsetup-init.isLoaded">
		<mkdir dir="${build.dir}/sql" />

		<property name="dbsetup-init.isLoaded" value="t" />
		<property name="dbsetup-subsystems" value="appdef,auth,authz,control,events,measurement,bizapp,common,scheduler,agtmgmt,rt,pdk,hqu" />
	</target>

	<target name="dbsetup-combine-check">
		<uptodate property="dbsetup-combine.notrequired" targetfile="${build.dir}/sql/dbsetup-combine.tstamp">
			<srcfiles dir="${hq.home}/hq-installer/sql">
				<include name="*.xml" />
				<include name="**/*.hq-xml" />
			</srcfiles>
		</uptodate>
	</target>

	<target name="dbsetup-uncombine">
		<delete file="${build.dir}/sql/dbsetup-combine.tstamp" />
	</target>

	<target name="dbsetup-combine" depends="dbsetup-init,dbsetup-combine-check" unless="dbsetup-combine.notrequired">
		<delete quiet="true" dir="${build.dir}/sql" />
		<mkdir dir="${build.dir}/sql" />
		<copy todir="${build.dir}/sql">
			<fileset dir="${hq.home}/hq-installer/sql" includes="*-data.xml" />
		</copy>
		<switch value="${hqee.build}">
			<case value="true">
				<copy todir="${build.dir}/sql">
					<fileset dir="${basedir}/hqee-installer/sql" includes="*-data.xml" />
				</copy>
			</case>
			<default>
			</default>
		</switch>

		<!-- still need a dummy file named schema-orig.xml for now,
	 will remove this when all dependencies are elimnated -->
		<touch file="${build.dir}/sql/schema-orig.xml" />

		<dbsetup-cat debug="true" destfile="${build.dir}/sql/data-orig.xml" name="data-orig.xml" notice="Copyright (C) 2004-2007, Hyperic, Inc., All Rights Reserved." order="${dbsetup-subsystems}">
			<fileset dir="${build.dir}/sql">
				<include name="*-data.xml" />
			</fileset>
		</dbsetup-cat>
		<touch file="${build.dir}/sql/dbsetup-combine.tstamp" />
	</target>

	<target name="dbsetup-replace" depends="dbsetup-combine">
		<crypto value="${server.admin.password}" property="server.admin.password.encrypted" />

		<delete file="${build.dir}/sql/schema.xml" />
		<copy file="${build.dir}/sql/schema-orig.xml" tofile="${build.dir}/sql/schema.xml" />

		<replace file="${build.dir}/sql/schema.xml">
			<replacefilter token="@@@M_DATA@@@" value="${server.tablespace.m_data}" />
			<replacefilter token="@@@M_IDX@@@" value="${server.tablespace.m_idx}" />
			<replacefilter token="@@@PL_DATA@@@" value="${server.tablespace.pl_data}" />
			<replacefilter token="@@@PL_IDX@@@" value="${server.tablespace.pl_idx}" />
			<replacefilter token="@@@LG_DATA@@@" value="${server.tablespace.lg_data}" />
			<replacefilter token="@@@LG_IDX@@@" value="${server.tablespace.lg_idx}" />
			<replacefilter token="@@@SM_DATA@@@" value="${server.tablespace.sm_data}" />
			<replacefilter token="@@@SM_IDX@@@" value="${server.tablespace.sm_idx}" />
		</replace>

		<delete file="${build.dir}/sql/data.xml" />

		<copy file="${build.dir}/sql/data-orig.xml" tofile="${build.dir}/sql/data.xml" />

		<replace file="${build.dir}/sql/data.xml">
			<replacefilter token="@@@ADMINUSERNAME@@@" value="${server.admin.username}" />
			<replacefilter token="@@@ADMINPASSWORD@@@" value="${server.admin.password.encrypted}" />
			<replacefilter token="@@@ADMINEMAIL@@@" value="${server.admin.email}" />
			<replacefilter token="@@@BASEURL@@@" value="${server.webapp.baseurl}" />
			<replacefilter token="@@@MAILHOST@@@" value="${server.mail.host}" />
			<replacefilter token="@@@MAILSENDER@@@" value="${server.mail.sender}" />
			<replacefilter token="@@@JAASPROVIDER@@@" value="${server.jaas.provider}" />
			<replacefilter token="@@@LDAPURL@@@" value="${server.ldap.url}" />
			<replacefilter token="@@@LDAPPROTOCOL@@@" value="${server.ldap.protocol}" />
			<replacefilter token="@@@LDAPLOGINPROP@@@" value="${server.ldap.loginProperty}" />
			<replacefilter token="@@@LDAPBASEDN@@@" value="${server.ldap.baseDN}" />
			<replacefilter token="@@@LDAPSEARCHFILTER@@@" value="${server.ldap.searchFilter}" />
			<replacefilter token="@@@LDAPBINDDN@@@" value="${server.ldap.bindDN}" />
			<replacefilter token="@@@LDAPBINDPW@@@" value="${server.ldap.bindPW}" />
		</replace>
	</target>

	<target name="dbsetup-schema" depends="dbsetup-init,dbsetup-combine,hibernate-create" description="Initialize the database schema" />

	<target name="dbsetup-data" depends="dbsetup-init,dbsetup-combine" description="Initialize the deployment data">
		<antcall target="dbsetup-process-file">
			<param name="sqlfile" value="${build.dir}/sql/data.xml" />
			<param name="data" value="true" />
			<param name="uninstall" value="false" />
		</antcall>
	</target>

	<target name="dbsetup-uninstall" depends="hibernate-drop" description="Drop the schema" />

	<!-- This target is used via antcall by dbsetup-schema and dbsetup-data.
       The param expected is:
         sqlfile   : the name of the sql file (expected to be the full
                     path to the DBSetup XML file)
         data      : if the dbsetup file is creating/dropping tables, this is false.
                     if the dbsetup file is inserting data, this is true.
         uninstall : if the dbsetup file is creating stuff, this is false.
                     if the dbsetup file is dropping stuff, this is true.
  -->
	<target name="dbsetup-process-file" depends="init-install-taskdefs">
		<dbsetup xmlFile="${sqlfile}" jdbcUrl="${hq.jdbc.url}" jdbcUser="${hq.jdbc.user}" jdbcPassword="${hq.jdbc.password}" typeMap="${hq.home}/hq-installer/data/common-dbsetup-typemap.xml" data="${data}" sqlFile="${basedir}/build/sql/dbsetup-all-${hq.server.ds-mapping}-install.sql" noexec="false" uninstall="${uninstall}" appendToSqlFile="true" />
	</target>


	<!-- Main DBSetup target -->
	<target name="dbsetup" depends="dbsetup-schema-only,dbsetup-data,dbsetup-upgrade" description="Full drop and setup for database" />

	<target name="dbsetup-schema-only" depends="dbsetup-combine,dbsetup-replace,dbsetup-uninstall,dbsetup-schema" description="Create an empty schema in the database, without any data." />

	<target name="dbsetup-upgrade" depends="init-install-taskdefs">
		<ant antfile="${hq.home}/hq-installer/data/db-upgrade.xml" target="upgrade" inheritAll="true" inheritRefs="true">
			<property name="jdbc.url" value="${hq.jdbc.url}" />
			<property name="jdbc.user" value="${hq.jdbc.user}" />
			<property name="jdbc.password" value="${hq.jdbc.password}" />
			<property name="typemap.file" value="${hq.home}/hq-installer/data/common-dbsetup-typemap.xml" />
			<property name="schema.target" value="${hq.schema.target.version}" />
		</ant>
	</target>



</project>
