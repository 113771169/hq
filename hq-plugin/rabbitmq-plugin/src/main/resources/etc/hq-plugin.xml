<?xml version="1.0"?>
<!DOCTYPE plugin [
        <!ENTITY process-metrics SYSTEM "/pdk/plugins/process-metrics.xml">
        ]>
<!--
 * NOTE: This copyright does *not* cover user programs that use HQ
 * program services by normal system calls through the application
 * program interfaces provided as part of the Hyperic Plug-in Development
 * Kit or the Hyperic Client Development Kit - this is merely considered
 * normal use of the program, and does *not* fall under the heading of
 *  "derived work".
 *
 *  Copyright (C) [2010], VMware, Inc.
 *  This file is part of HQ.
 *
 *  HQ is free software; you can redistribute it and/or modify
 *  it under the terms version 2 of the GNU General Public License as
 *  published by the Free Software Foundation. This program is distributed
 *  in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
 *  even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 *  PARTICULAR PURPOSE. See the GNU General Public License for more
 *  details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
 *  USA.
 -->

<plugin class="org.hyperic.hq.plugin.rabbitmq.product.RabbitProductPlugin">

    <filter name="server-connection" value="node=%node%,addr=%addr%,port=%port%,username=%username%,password=%password%"/>

    <server name="RabbitMQ" description="RabbitMQ">

        <help>
            <![CDATA[
                  <p>
                    <h2>Configure RabbitMQ for Monitoring</h2>

                      <h3>Prerequisites and Support</h3>
                        The RabbitMQ plugin runs under HQ 4.5 and later and supports RabbitMQ versions 1.8.1 and higher.

                        This version of the plugin requires that the HQ Agent that manages RabbitMQ has permission to read the Erlang cookie.

                        <h3>Configuration Requirements</h3>
                        The HQ Agent on the platform where the RabbitMQ server should auto-discover the "RabbitMQ" server instance — assuming
                        at least one RabbitMQ Node is running. — and present it as a new server on the platform in the Auto-Discovery portlet
                        of the HQ Dashboard.
                        <h3>Config properties</h3>
                        <ol>
                            <li><b>node</b>: RabbitMQ node name (rabbit_X@servername)</li>
                            <li><b>authentication</b>: Content of .erlang.cookie file</li>
                            <li><b>process.query</b>: Sigar PTQL Query for RaabitMQ process (default='State.Name.re=[beam|erl],Args.*.eq=-sname,Args.*.eq=%node%')</li>
                        </ol>
                  </p>
                  <p>
                    <h3>Help Docs</h3>
                    <a href="http://support.hyperic.com/display/EVO/Monitoring+RabbitMQ">Monitoring and Managing RabbitMQ</a>
                  </p>
            ]]>
        </help>

        <plugin type="autoinventory" class="org.hyperic.hq.plugin.rabbitmq.detect.RabbitServerDetector"/>

        <plugin type="measurement" class="org.hyperic.hq.plugin.rabbitmq.collect.RabbitServerMeasurement"/>

        <plugin type="collector" class="org.hyperic.hq.plugin.rabbitmq.collect.RabbitServerCollector"/>

        <plugin type="log_track" class="org.hyperic.hq.plugin.rabbitmq.core.RabbitBrokerLog"/>

        <config>
            <option name="node" description="node"/>
            <option name="addr" description="" default="localhost"/>
            <option name="port" description="" default="55672"/>
            <option name="username" description="" default="guest"/>
            <option name="password" description="" default="guest"/>
            <option name="nodurable" description="Discover No Durable Objects" type="boolean" default="false"/>
            <option name="autosycn" description="Auto-Delete UnAvailable Objects" type="boolean" default="false"/>
        </config>

        <properties>
        </properties>

        <metric name="Availability"
                template="rabbitmq:${server-connection}:Availability"
                indicator="true"/>

        <metric name="Messages"
                template="rabbitmq:${server-connection}:messages"
                indicator="true"/>

        <metric name="Messages Ready"
                template="rabbitmq:${server-connection}:messages_ready"
                indicator="true"/>

        <metric name="Messages Unacknowledged"
                template="rabbitmq:${server-connection}:messages_unacknowledged"
                indicator="true"/>

        <metric name="Messages Publish /s"
                template="rabbitmq:${server-connection}:publishDetails"
                indicator="true"/>
        <metric name="Messages Confirm /s"
                template="rabbitmq:${server-connection}:confirmDetails"
                indicator="true"/>
        <metric name="Messages Deliver /s"
                template="rabbitmq:${server-connection}:deliverDetails"
                indicator="true"/>
        <metric name="Messages Acknowledge /s"
                template="rabbitmq:${server-connection}:ackDetails"
                indicator="true"/>
        <metric name="Messages Get /s"
                template="rabbitmq:${server-connection}:getDetails"
                indicator="true"/>
        <metric name="Messages Get (noack) /s"
                template="rabbitmq:${server-connection}:getNoAckDetails"
                indicator="true"/>
        <metric name="Messages Deliver (noack) /s"
                template="rabbitmq:${server-connection}:deliverNoAckDetails"
                indicator="true"/>
        <metric name="Messages Deliver+Get /s"
                template="rabbitmq:${server-connection}:deliverGetDetails"
                indicator="true"/>

        <metric name="Memory watermark"
                template="rabbitmq:${server-connection}:mem_ets"
                indicator="true"/>

        <metric name="Erlang Processes used"
                template="rabbitmq:${server-connection}:proc_used"/>

        <metric name="Erlang Processes % used"
                template="rabbitmq:${server-connection}:proc_used_percentage"
                indicator="true" units="percentage"/>

        <metric name="Process Open File Descriptors %"
                template="rabbitmq:${server-connection}:fd_percentage"
                indicator="true" units="percentage"/>

        <metric name="Process Virtual Memory Size"
                template="rabbitmq-sigar:Type=ProcMem,${server-connection}:Size"
                units="B"/>

        <metric name="Process Resident Memory Size"
                template="rabbitmq-sigar:Type=ProcMem,${server-connection}:Resident"
                indicator="true"
                units="B"/>

        <metric name="Process Page Faults"
                template="rabbitmq-sigar:Type=ProcMem,${server-connection}:PageFaults"
                collectionType="trendsup"/>

        <metric name="Process Cpu System Time"
                template="rabbitmq-sigar:Type=ProcCpu,${server-connection}:Sys"
                units="ms"
                collectionType="trendsup"/>

        <metric name="Process Cpu User Time"
                template="rabbitmq-sigar:Type=ProcCpu,${server-connection}:User"
                units="ms"
                collectionType="trendsup"/>

        <metric name="Process Cpu Total Time"
                template="rabbitmq-sigar:Type=ProcCpu,${server-connection}:Total"
                units="ms"
                collectionType="trendsup"/>

        <metric name="Process Cpu Usage"
                template="rabbitmq-sigar:Type=ProcCpu,${server-connection}:Percent"
                indicator="true"
                units="percentage"/>

        <metric name="Process Start Time"
                template="rabbitmq-sigar:Type=ProcTime,${server-connection}:StartTime"
                category="AVAILABILITY"
                units="epoch-millis"
                collectionType="static"/>

        <metric name="Process Open File Descriptors"
                template="rabbitmq-sigar:Type=ProcFd,${server-connection}:Total"/>

        <metric name="Process Threads"
                template="rabbitmq-sigar:Type=ProcState,${server-connection}:Threads"/>


        <!-- Next release:
       <plugin type="control" class="org.hyperic.hq.plugin.rabbitmq.manage.RabbitBrokerManagerPlugin"/>
       <actions include name="startNode,stopNode,startBrokerApplication,stopBrokerApplication,createQueue,deleteQueue,
                      purgeQueue,createExchange,deleteExchangeIfUnused,createUser,updateUserPassword,deleteUser"/>
        -->

        <service name="Queue">
            <property name="template"
                      value="rabbitmq:queue=%queue%,vhost=%vhost%,${server-connection}:${alias}"/>

            <config>
                <option name="vhost" description="rabbit node-vhost name"/>
                <option name="queue" description="queue name"/>
            </config>


            <metric name="Availability"
                    category="AVAILABILITY"
                    units="percentage"
                    indicator="true"
                    defaultOn="true"
                    collectionType="dynamic"/>
            <metric name="idle Time"
                    alias="idleTime"
                    category="UTILIZATION"
                    units="ms"
                    indicator="true"
                    defaultOn="true"
                    collectionType="static"/>
            <metric name="Messages Publish /s"
                alias="publishDetails"
                indicator="true"/>
            <metric name="Messages Confirm /s"
                alias="confirmDetails"
                indicator="true"/>
            <metric name="Messages Deliver /s"
                alias="deliverDetails"
                indicator="true"/>
            <metric name="Messages Acknowledge /s"
                alias="ackDetails"
                indicator="true"/>
            <metric name="Messages Get /s"
                alias="getDetails"
                indicator="true"/>
            <metric name="Messages Get (noack) /s"
                alias="getNoAckDetails"
                indicator="true"/>
            <metric name="Messages Deliver (noack) /s"
                alias="deliverNoAckDetails"
                indicator="true"/>
            <metric name="Messages Deliver+Get /s"
                alias="deliverGetDetails"
                indicator="true"/>
            <metric name="Messages"
                    alias="messages"
                    category="THROUGHPUT"
                    units="none"
                    indicator="true"
                    defaultOn="true"
                    collectionType="dynamic"/>
            <metric name="Consumers"
                    alias="consumers"
                    category="UTILIZATION"
                    units="none"
                    indicator="true"
                    defaultOn="true"
                    collectionType="dynamic"/>
            <metric name="Transactions"
                    alias="transactions"
                    category="THROUGHPUT"
                    units="none"
                    indicator="true"
                    defaultOn="true"
                    collectionType="dynamic"/>  
            <metric name="Acks Uncommitted"
                    alias="acksUncommitted"
                    category="THROUGHPUT"
                    units="none"
                    indicator="true"
                    defaultOn="true"
                    collectionType="dynamic"/>
            <metric name="Messages Ready"
                    alias="messagesReady"
                    category="THROUGHPUT"
                    units="none"
                    indicator="true"
                    defaultOn="true"
                    collectionType="dynamic"/>
            <metric name="Messages Unacknowledged"
                    alias="messagesUnacknowledged"
                    category="THROUGHPUT"
                    units="none"
                    indicator="true"
                    defaultOn="true"
                    collectionType="dynamic"/>
            <metric name="Messages Uncommitted"
                    alias="messagesUncommitted"
                    category="THROUGHPUT"
                    units="none"
                    indicator="true"
                    defaultOn="true"
                    collectionType="dynamic"/>
            <metric name="Memory"
                    alias="memory"
                    category="UTILIZATION"
                    units="b"
                    indicator="true"
                    defaultOn="true"
                    collectionType="dynamic"/>

            <plugin type="collector" class="org.hyperic.hq.plugin.rabbitmq.collect.QueueCollector"/>
            <plugin type="measurement" class="org.hyperic.hq.product.MeasurementPlugin"/>
            <plugin type="autoinventory"/>
            <properties>
                <property description="Durable" name="durable"/>
            </properties>
        </service>

        <service name="Channel">
            <property name="template" value="rabbitmq:channel=%channel%,${server-connection}:${alias}"/>

            <config>
                <option name="vhost" description="rabbit node-vhost name"/>
                <option name="channel" description="channel name"/>
            </config>

            <metric name="Availability"
                    category="AVAILABILITY"
                    interval="300000"
                    units="percentage"
                    indicator="true"
                    collectionType="dynamic"/>
            <metric name="Messages Publish /s"
                alias="publishDetails"
                indicator="true"/>
            <metric name="Messages Confirm /s"
                alias="confirmDetails"
                indicator="true"/>
            <metric name="Messages Deliver /s"
                alias="deliverDetails"
                indicator="true"/>
            <metric name="Messages Acknowledge /s"
                alias="ackDetails"
                indicator="true"/>
            <metric name="Messages Get /s"
                alias="getDetails"
                indicator="true"/>
            <metric name="Messages Get (noack) /s"
                alias="getNoAckDetails"
                indicator="true"/>
            <metric name="Messages Deliver (noack) /s"
                alias="deliverNoAckDetails"
                indicator="true"/>
            <metric name="Messages Deliver+Get /s"
                alias="deliverGetDetails"
                indicator="true"/>
            <metric name="idle Time"
                    alias="idleTime"
                    category="UTILIZATION"
                    units="ms"
                    indicator="true"
                    defaultOn="true"
                    collectionType="static"/>
            <metric name="Consumers"
                    alias="consumerCount"
                    category="UTILIZATION"
                    units="none"
                    indicator="true"
                    defaultOn="true"
                    collectionType="dynamic"/>
            <metric name="Prefetch Count"
                    alias="prefetchCount"
                    category="THROUGHPUT"
                    units="B"
                    indicator="true"
                    defaultOn="true"
                    collectionType="dynamic"/>
            <metric name="Acks Uncommitted"
                    alias="acksUncommitted"
                    category="THROUGHPUT"
                    units="B"
                    indicator="true"
                    defaultOn="true"
                    collectionType="dynamic"/>
            <metric name="Messages Unacknowledged"
                    alias="messagesUnacknowledged"
                    category="THROUGHPUT"
                    units="B"
                    indicator="true"
                    defaultOn="true"
                    collectionType="dynamic"/>

            <plugin type="collector" class="org.hyperic.hq.plugin.rabbitmq.collect.ChannelCollector"/>
            <plugin type="measurement" class="org.hyperic.hq.product.MeasurementPlugin"/>
            <plugin type="autoinventory"/>

            <properties>
                <property description="User" name="user"/>
                <property description="Confirm" name="confirm"/>
                <property description="Transactional" name="transactional"/>
            </properties>
        </service>

        <service name="Connection">
            <property name="template"
                      value="rabbitmq:connection=%connection%,${server-connection}:${alias}"/>

            <config>
                <option name="connection" description="connection name"/>
            </config>

            <metric name="Octets Received"
                    alias="octetsReceived"
                    category="THROUGHPUT"
                    units="B"
                    indicator="true"
                    defaultOn="true"
                    collectionType="dynamic"/>
            <metric name="Octets Sent"
                    alias="octetsSent"
                    category="THROUGHPUT"
                    units="B"
                    indicator="true"
                    defaultOn="true"
                    collectionType="dynamic"/>
            <metric name="Network Packets Received"
                    alias="packetsReceived"
                    category="THROUGHPUT"
                    units="B"
                    indicator="true"
                    collectionType="dynamic"/>
            <metric name="Network Packets Sent"
                    alias="packetsSent"
                    category="THROUGHPUT"
                    units="B"
                    indicator="true"
                    defaultOn="true"
                    collectionType="dynamic"/>
            <metric name="Channels"
                    alias="channelCount"
                    category="UTILIZATION"
                    units="none"
                    indicator="true"
                    defaultOn="true"
                    collectionType="dynamic"/>
            <metric name="Pending Sends"
                    alias="pendingSends"
                    category="UTILIZATION"
                    units="none"
                    indicator="true"
                    defaultOn="true"
                    collectionType="dynamic"/>
            <metric name="Availability"
                    category="AVAILABILITY"
                    interval="300000"
                    units="percentage"
                    indicator="true"
                    collectionType="dynamic"/>

            <plugin type="collector" class="org.hyperic.hq.plugin.rabbitmq.collect.ConnectionCollector"/>
            <plugin type="measurement" class="org.hyperic.hq.product.MeasurementPlugin"/>
            <plugin type="autoinventory"/>

            <properties>
                <property description="Authentication" name="authMechanism"/>
                <property description="Protocol" name="protocol"/>
                <property description="User" name="user"/>
                <property description="Timeout" name="timeout"/>
                <property description="SSL" name="ssl"/>
            </properties>
        </service>

        <service name="Exchange">
            <property name="template"
                      value="rabbitmq:exchange=%exchange%,vhost=%vhost%,${server-connection}:${alias}"/>

            <config>
                <option name="vhost" description="rabbit node-vhost name"/>
                <option name="exchange" description="exchange name"/>
            </config>

            <metric name="Availability"
                    category="AVAILABILITY"
                    interval="300000"
                    units="percentage"
                    indicator="true"
                    collectionType="dynamic"/>
            <metric name="IN Messages Publish /s"
                    alias="in_publish_details"
                    category="THROUGHPUT"
                    units="none"
                    defaultOn="true"
                    indicator="true"/>
            <metric name="OUT Messages Publish /s"
                    alias="out_publish_details"
                    category="THROUGHPUT"
                    units="none"
                    defaultOn="true"
                    indicator="true"/>

            <plugin type="collector" class="org.hyperic.hq.plugin.rabbitmq.collect.ExchangeCollector"/>
            <plugin type="measurement" class="org.hyperic.hq.product.MeasurementPlugin"/>
            <plugin type="autoinventory"/>

            <properties>
                <property description="Durable" name="durable"/>
                <property description="Exchange Type" name="type"/>
                <property description="Auto-delete" name="autoDelete"/>
            </properties>
        </service>

        <!-- These will hit the server enough for each query that we do not want to
        run the collector often. Consider modifying what is queried/exposed with large-volume
        heavily-trafficed brokers. -->
        <service name="VirtualHost">
            <property name="template" value="rabbitmq:vhost=%vhost%,${server-connection}:${alias}"/>

            <config>
                <option name="vhost" description="rabbit node-vhost name"/>
            </config>

            <metric name="Availability"
                    category="AVAILABILITY"
                    interval="300000"
                    units="percentage"
                    indicator="true"
                    collectionType="dynamic"/>
            <metric name="Exchanges"
                    alias="exchangeCount"
                    category="UTILIZATION"
                    units="none"
                    indicator="true"
                    collectionType="dynamic"/>
            <metric name="Queues"
                    alias="queueCount"
                    category="UTILIZATION"
                    units="none"
                    indicator="true"
                    collectionType="dynamic"/>
            <metric name="Consumers"
                    alias="consumerCount"
                    category="UTILIZATION"
                    units="none"
                    indicator="true"
                    collectionType="dynamic"/>
            <metric name="Channels"
                    alias="channelCount"
                    category="UTILIZATION"
                    units="none"
                    indicator="true"
                    collectionType="dynamic"/>
            <metric name="Connections"
                    alias="connectionCount"
                    category="UTILIZATION"
                    units="none"
                    indicator="true"
                    collectionType="dynamic"/>


            <plugin type="collector" class="org.hyperic.hq.plugin.rabbitmq.collect.VirtualHostCollector"/>
            <plugin type="measurement" class="org.hyperic.hq.product.MeasurementPlugin"/>
            <plugin type="autoinventory"/>

            <properties>
                <property description="Virtual Host" name="name"/>
                <property description="Node" name="node"/>
                <property description="Users" name="users"/>
            </properties>
        </service>


    </server>

</plugin>
