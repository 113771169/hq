<?xml version="1.0"?>
<!DOCTYPE plugin [
        <!ENTITY process-metrics SYSTEM "/pdk/plugins/process-metrics.xml">
        ]>
<!--
 * NOTE: This copyright does *not* cover user programs that use HQ
 * program services by normal system calls through the application
 * program interfaces provided as part of the Hyperic Plug-in Development
 * Kit or the Hyperic Client Development Kit - this is merely considered
 * normal use of the program, and does *not* fall under the heading of
 *  "derived work".
 *
 *  Copyright (C) [2010], VMware, Inc.
 *  This file is part of HQ.
 *
 *  HQ is free software; you can redistribute it and/or modify
 *  it under the terms version 2 of the GNU General Public License as
 *  published by the Free Software Foundation. This program is distributed
 *  in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
 *  even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 *  PARTICULAR PURPOSE. See the GNU General Public License for more
 *  details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
 *  USA.
 -->

<plugin class="org.hyperic.hq.plugin.rabbitmq.product.RabbitProductPlugin">

    <filter name="server-connection" value="node=%node%,authentication=%authentication%"/>

    <server name="RabbitMQ" description="RabbitMQ">

        <help>
            <![CDATA[
                  <p>
                    <h2>Configure RabbitMQ for Monitoring</h2>

                      <h3>Prerequisites and Support</h3>
                        The RabbitMQ plugin runs under HQ 4.5 and later and supports RabbitMQ versions 1.8.1 and higher.

                        This version of the plugin requires that the HQ Agent that manages RabbitMQ has permission to read the Erlang cookie.

                        <h4>Configuration Requirements</h4>
                        The HQ Agent on the platform where the RabbitMQ server should auto-discover the "RabbitMQ" server instance — assuming
                        at least one RabbitMQ Node is running. — and present it as a new server on the platform in the Auto-Discovery portlet
                        of the HQ Dashboard. To enable metric collection and auto-discovery of RabbitMQ services:

                        <ol>
                           <li>Import the platform with the new RabbitMQ server to inventory</li>
                           <li>Navigate to the Rabbit MQ server, using Resources > Browse > Servers</li>
                           <li>Under the Server (Node), navigate to Tools Menu > Configure Server</li>
                           <li>Enter the RabbitMQ username and password for the RabbitMQ server and click OK. Hyperic assumes the default</li>
                           RabbitMQ username and password have been changed for security reasons and does set them as the default</li>
                        </ol>

                         This will allow enable the plugin to authenticate, auto-discover Queue, Channel, Connection, Exchanges, etc., and
                         proceed with metric collection. Note: Discovered services are automatically imported to HQ inventory.
                  </p>
                  <p>
                    <h3>Help Docs</h3>
                    <a href="http://support.hyperic.com/display/EVO/Monitoring+RabbitMQ">Monitoring and Managing RabbitMQ</a>
                  </p>
            ]]>
        </help>

        <plugin type="autoinventory" class="org.hyperic.hq.plugin.rabbitmq.detect.RabbitServerDetector"/>

        <plugin type="measurement" class="org.hyperic.hq.product.MeasurementPlugin"/>

        <plugin type="collector" class="org.hyperic.hq.plugin.rabbitmq.collect.RabbitServerCollector"/>

        <plugin type="log_track" class="org.hyperic.hq.plugin.rabbitmq.core.RabbitBrokerLog"/>

        <config>
            <option name="node" description="node"/>
            <option name="authentication" description=".erlang.cookie value"/>
            <option name="process.query" default="State.Name.re=[beam|erl],Args.*.eq=-sname,Args.*.eq=%node%"
                    description="PTQL Query"/>
        </config>

        <properties>
            <property description="Node Name" name="node.name"/>
            <property description="Node Path" name="node.path"/>
            <property description="Node PID" name="node.pid"/>
            <property description="Erlang Process" name="erlang.process"/>
            <property description="Rabbit -boot" name="rabbit.boot"/>
        </properties>

        <metric name="Availability"
                template="rabbitmq:${server-connection}:Availability"
                indicator="true"/>

        &process-metrics;

        <!-- Next release:
       <plugin type="control" class="org.hyperic.hq.plugin.rabbitmq.manage.RabbitBrokerManagerPlugin"/>
       <actions include name="startNode,stopNode,startBrokerApplication,stopBrokerApplication,createQueue,deleteQueue,
                      purgeQueue,createExchange,deleteExchangeIfUnused,createUser,updateUserPassword,deleteUser"/>
        -->

        <service name="Queue">
            <property name="template"
                      value="rabbitmq:vhost=%vhost%,${server-connection}:%queue%.${alias}"/>

            <config>
                <option name="vhost" description="rabbit node-vhost name"/>
                <option name="queue" description="queue name"/>
            </config>

            <metric name="Messages"
                    alias="messages"
                    category="THROUGHPUT"
                    units="none"
                    indicator="true"
                    defaultOn="true"
                    collectionType="dynamic"/>
            <metric name="Consumers"
                    alias="consumers"
                    category="UTILIZATION"
                    units="none"
                    indicator="true"
                    defaultOn="true"
                    collectionType="dynamic"/>
            <metric name="Transactions"
                    alias="transactions"
                    category="THROUGHPUT"
                    units="none"
                    indicator="true"
                    defaultOn="true"
                    collectionType="dynamic"/>  
            <metric name="Acks Uncommitted"
                    alias="acksUncommitted"
                    category="THROUGHPUT"
                    units="none"
                    indicator="true"
                    defaultOn="true"
                    collectionType="dynamic"/>
            <metric name="Messages Ready"
                    alias="messagesReady"
                    category="THROUGHPUT"
                    units="none"
                    indicator="true"
                    defaultOn="true"
                    collectionType="dynamic"/>
            <metric name="Messages Unacknowledged"
                    alias="messagesUnacknowledged"
                    category="THROUGHPUT"
                    units="none"
                    indicator="true"
                    defaultOn="true"
                    collectionType="dynamic"/>
            <metric name="Messages Uncommitted"
                    alias="messagesUncommitted"
                    category="THROUGHPUT"
                    units="none"
                    indicator="true"
                    defaultOn="true"
                    collectionType="dynamic"/>
            <metric name="Availability"
                    category="AVAILABILITY"
                    units="percentage"
                    indicator="true"
                    defaultOn="true"
                    collectionType="dynamic"/>
            <metric name="Memory"
                    alias="memory"
                    category="UTILIZATION"
                    units="b"
                    indicator="true"
                    defaultOn="true"
                    collectionType="dynamic"/>

            <plugin type="collector" class="org.hyperic.hq.plugin.rabbitmq.collect.QueueCollector"/>
            <plugin type="measurement" class="org.hyperic.hq.product.MeasurementPlugin"/>
            <plugin type="autoinventory"/>
            <properties>
                <property description="Name" name="name"/>
                <property description="Process ID" name="pid"/>
                <property description="Durable" name="durable"/>
            </properties>
        </service>

        <service name="Channel">
            <property name="template" value="rabbitmq:vhost=%vhost%,${server-connection}:%channel%.${alias}"/>

            <config>
                <option name="vhost" description="rabbit node-vhost name"/>
                <option name="channel" description="channel name"/>
            </config>

            <metric name="Consumers"
                    alias="consumerCount"
                    category="UTILIZATION"
                    units="none"
                    indicator="true"
                    defaultOn="true"
                    collectionType="dynamic"/>
            <metric name="Prefetch Count"
                    alias="prefetchCount"
                    category="THROUGHPUT"
                    units="B"
                    indicator="true"
                    defaultOn="true"
                    collectionType="dynamic"/>
            <metric name="Acks Uncommitted"
                    alias="acksUncommitted"
                    category="THROUGHPUT"
                    units="B"
                    indicator="true"
                    defaultOn="true"
                    collectionType="dynamic"/>
            <metric name="Messages Unacknowledged"
                    alias="messagesUnacknowledged"
                    category="THROUGHPUT"
                    units="B"
                    indicator="true"
                    defaultOn="true"
                    collectionType="dynamic"/>
            <metric name="Availability"
                    category="AVAILABILITY"
                    units="percentage"
                    indicator="true"
                    collectionType="dynamic"/>

            <plugin type="collector" class="org.hyperic.hq.plugin.rabbitmq.collect.ChannelCollector"/>
            <plugin type="measurement" class="org.hyperic.hq.product.MeasurementPlugin"/>
            <plugin type="autoinventory"/>

            <properties>
                <property description="Process ID" name="pid"/>
                <property description="Connection" name="connection"/>
                <property description="Number" name="number"/>
                <property description="User" name="user"/>
                <property description="Transactional" name="transactional"/>
            </properties>
        </service>

        <service name="Connection">
            <property name="template"
                      value="rabbitmq:${server-connection}:%connection%.${alias}"/>

            <config>
                <option name="connection" description="connection name"/>
            </config>

            <metric name="Octets Received"
                    alias="octetsReceived"
                    category="THROUGHPUT"
                    units="B"
                    indicator="true"
                    defaultOn="true"
                    collectionType="dynamic"/>
            <metric name="Octets Sent"
                    alias="octetsSent"
                    category="THROUGHPUT"
                    units="B"
                    indicator="true"
                    defaultOn="true"
                    collectionType="dynamic"/>
            <metric name="Network Packets Received"
                    alias="packetsReceived"
                    category="THROUGHPUT"
                    units="B"
                    indicator="true"
                    collectionType="dynamic"/>
            <metric name="Network Packets Sent"
                    alias="packetsSent"
                    category="THROUGHPUT"
                    units="B"
                    indicator="true"
                    defaultOn="true"
                    collectionType="dynamic"/>
            <metric name="Channels"
                    alias="channelCount"
                    category="UTILIZATION"
                    units="none"
                    indicator="true"
                    defaultOn="true"
                    collectionType="dynamic"/>
            <metric name="Pending Sends"
                    alias="pendingSends"
                    category="UTILIZATION"
                    units="none"
                    indicator="true"
                    defaultOn="true"
                    collectionType="dynamic"/>
            <metric name="Availability"
                    category="AVAILABILITY"
                    units="percentage"
                    indicator="true"
                    collectionType="dynamic"/>

            <plugin type="collector" class="org.hyperic.hq.plugin.rabbitmq.collect.ConnectionCollector"/>
            <plugin type="measurement" class="org.hyperic.hq.product.MeasurementPlugin"/>
            <plugin type="autoinventory"/>

            <properties>
                <property description="PID" name="pid"/>
                <property description="Self Node" name="selfNode"/>
                <property description="Peer Node" name="peerNode"/>
                <property description="Frame Max" name="frameMax"/>
                <property description="State" name="state"/>
                <property description="VHost" name="vHost"/>
                <property description="Username" name="username"/>
            </properties>
        </service>

        <service name="Exchange">
            <property name="template"
                      value="rabbitmq:vhost=%vhost%,${server-connection}:%exchange%.${alias}"/>

            <config>
                <option name="vhost" description="rabbit node-vhost name"/>
                <option name="exchange" description="exchange name"/>
            </config>

            <metric name="Availability"
                    category="AVAILABILITY"
                    units="percentage"
                    indicator="true"
                    collectionType="dynamic"/>

            <plugin type="collector" class="org.hyperic.hq.plugin.rabbitmq.collect.ExchangeCollector"/>
            <plugin type="measurement" class="org.hyperic.hq.product.MeasurementPlugin"/>
            <plugin type="autoinventory"/>

            <properties>
                <property description="Durable" name="durable"/>
                <property description="Exchange Type" name="exchangeType"/>
                <property description="Auto-delete" name="autoDelete"/>
            </properties>
        </service>

        <!-- These will hit the server enough for each query that we do not want to
        run the collector often. Consider modifying what is queried/exposed with large-volume
        heavily-trafficed brokers. -->
        <service name="VirtualHost">
            <property name="template" value="rabbitmq:vhost=%vhost%,${server-connection}:${alias}"/>

            <config>
                <option name="vhost" description="rabbit node-vhost name"/>
            </config>

            <metric name="Availability"
                    category="AVAILABILITY"
                    units="percentage"
                    indicator="true"
                    collectionType="dynamic"/>
            <metric name="Exchanges"
                    alias="exchangeCount"
                    category="UTILIZATION"
                    units="none"
                    indicator="true"
                    collectionType="dynamic"/>
            <metric name="Queues"
                    alias="queueCount"
                    category="UTILIZATION"
                    units="none"
                    indicator="true"
                    collectionType="dynamic"/>
            <metric name="Consumers"
                    alias="consumerCount"
                    category="UTILIZATION"
                    units="none"
                    indicator="true"
                    collectionType="dynamic"/>
            <metric name="Channels"
                    alias="channelCount"
                    category="UTILIZATION"
                    units="none"
                    indicator="true"
                    collectionType="dynamic"/>
            <metric name="Connections"
                    alias="connectionCount"
                    category="UTILIZATION"
                    units="none"
                    indicator="true"
                    collectionType="dynamic"/>


            <plugin type="collector" class="org.hyperic.hq.plugin.rabbitmq.collect.VirtualHostCollector"/>
            <plugin type="measurement" class="org.hyperic.hq.product.MeasurementPlugin"/>
            <plugin type="autoinventory"/>

            <properties>
                <property description="Virtual Host" name="name"/>
                <property description="Node" name="node"/>
                <property description="Users" name="users"/>
            </properties>
        </service>


    </server>

</plugin>
