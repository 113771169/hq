<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd">

	<context:annotation-config />

	<context:component-scan base-package="org.hyperic.bootstrap,com.hyperic.bootstrap" />

	<bean class="org.hyperic.sigar.OperatingSystem" factory-method="getInstance" />

	<bean class="org.hyperic.sigar.Sigar" />

	<bean id="jasyptConfiguration"
		class="org.jasypt.encryption.pbe.config.EnvironmentStringPBEConfig">
		<property name="algorithm" value="PBEWithMD5AndTripleDES" />
		<property name="password" value="#{serverProps['server.encryption-key']}" />
	</bean>

	<bean id="propertyPasswordEncryptor" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
		<property name="config" ref="jasyptConfiguration" />
	</bean>
	
	<bean id="serverProps" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:/hq-server.conf</value>
			</list>
		</property>
	</bean>

	<bean
		class="org.jasypt.spring.properties.EncryptablePropertyPlaceholderConfigurer">
		<constructor-arg ref="propertyPasswordEncryptor" />
		<property name="locations">
			<list>
				<value>classpath:/hq-server.conf</value>
			</list>
		</property>
	</bean>

	<bean class="org.apache.tomcat.jdbc.pool.DataSource"
		p:driverClassName="${server.database-driver}" p:url="${server.database-url}"
		p:username="${server.database-user}" p:password="${server.database-password}"
		p:defaultAutoCommit="false" p:minIdle="${server.database-minpoolsize}"
		p:maxIdle="${server.database-maxpoolsize}" p:maxWait="${server.database-blockingtimeout}"
		p:jdbcInterceptors="ConnectionState" />

</beans>
